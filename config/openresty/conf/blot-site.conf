set $upstream_server blot_dashboard_node;

# error page for when node server is unavailable
location = /error-upstream-offline.html {
  root  {{{config_directory}}}/html;
  try_files /error-upstream-offline-site.html =404;
}

# used to monitor uptime by docker
location = /health {
  return 200;
}

# redirect for /cdn/XYZ to cdn.blot.im/XYZ
location ~ ^/cdn/(.*)$ {
  return 301 https://cdn.blot.im/$1;
}

# bypass cache, long timeout
# used to stream an SSE with the current sync status of a site
location ~ ^/sites/[^/]+/status$ {
  {{> reverse-proxy-sse.conf}}
}

# bypass cache
location = /stripe-webhook {
  {{> reverse-proxy.conf}}
}

# bypass cache
location = /paypal-webhook {
  {{> reverse-proxy.conf}}
}

# bypass cache
location = /redis-health {
  {{> reverse-proxy.conf}}
}

# bypass cache and allow large uploads / downloads with long timeout
location /sites {
  {{> reverse-proxy-huge.conf}}
}

# bypass cache and allow large uploads / downloads with long timeout
# this is where the sync happens and we use the master server for this
# to keep the dashboard snappy
location /clients {
  set $upstream_server blot_node;
  {{> reverse-proxy-huge.conf}}
}

# bypass cache
location /dashboard {
  {{> reverse-proxy-huge.conf}}
}

# bypass cache for question endpoints with ID
# this is needed for the reply form to receive
# the correct csrf token
location ~ ^/questions/(\d+)$ {
  {{> reverse-proxy.conf}}
}

# bypass cache so csrf token works
location /questions/ask {
  {{> reverse-proxy.conf}}
}

# bypass cache so csrf token works
location /contact {
  {{> reverse-proxy.conf}}
}

# bypass cache so csrf token works
location /feedback {
  {{> reverse-proxy.conf}}
}

# bypass cache so csrf token works
location /support {
  {{> reverse-proxy.conf}}
}

# byoass cache so csrf token works
location /news/sign-up {
  {{> reverse-proxy.conf}}
}

# byoass cache so csrf token works
location /news/cancel {
  {{> reverse-proxy.conf}}
}

# bypass cache so csrf token works
location ~ ^/questions/[^/]+/edit$ {
  {{> reverse-proxy.conf}}
}

# bypass cache so csrf token works
location ~ ^/questions/[^/]+/new$ {
  {{> reverse-proxy.conf}}
}

# all other requests can be cached
location / {
  {{> reverse-proxy-cache.conf}}
}