Finish [setting up Andrew's site](https://mail.google.com/mail/u/0/#inbox/FMfcgzQcqRCkhdsXvnSjxbbfGSxxDtlW)

Fix drag and drop image behavior obsidian and tell John P

Add photo/pictures/pics/images grid to tagged page of blog template and photos subfolder to default folder.

Refactor front end domain page to have radio button to seelct between custom domain and blot subdomain
Inbox
- don't delete custom domain, though (maybe add property redirectDomain ?)

Work on template editor
- Verify local template editing works for all clients
- Add button to enable local template editing to editor
- When setting up local editing, Copy the case used elsewhere when creating templates directory, e.g. pages -> templates, Posts -> Templates
- Turn all folders into templates

Add link card feature (bare links) and tell [Guy](https://mail.google.com/mail/u/0/#inbox/FMfcgzQcqRBbftcBdFZZfZmqhfKNklbd)

Add folder post feature

---

Fix bug with huge draft crashing the sync server /a327ex/drafts/it_follows.txt

Fix bug with swiper css - it totally breaks site when pasted into css file...

Fix bug with title based wikilinks [[Corsi|...more]] -> Corsi/Index.md 'Title: Corsi'

Fix bug linking to relative pdf in subfolders, e.g. Pages/File.md '[](./file.pdf)' breaks

Fix bug with recursive partials which took down server
- seems possible in local templates
- possibly on web templates too

Fix bug with [~/gitbug folder](https://mail.google.com/mail/u/0/#inbox/KtbxLxgKJJfmhMNplLBcTcFCPgBVNlGtHL) during setup
- surface setup errors with git client
- handle these errors nicely through sync status

Fix bugs with documentation template and tell [Ray](https://blot.im/questions/3233)

Fix possible bug with changing file or folder case in Dropbox 

Fix possible bug with changing folder name in Google Drive from uppercase to lowercase (what happens to file inside?). Is this related to entry lookup for deleted files? How was the missing ghost file undeleteable? the case of one variant was deleted but the other was not. The case of the ID mismatched. The folder lock was stuck.

Fix bug with crash loop for page rendering issue
- cache 502 responses in proxy cache for X mins?
- how to handle this at a high level?
- ensure doens't break zero downtime deploy

Fix bug with crash loop for entry build
- add a timeout for entry build process which is solid

Fix bug with folder viewer which crashes server for large number of entries
- add pagination

Fix bug with 'failed to update folder lock' that throws an error – is the issue ebs?
- I can't reproduce the problem locally.
- Problem occurs with all the clients it seems
- Can we reproduce by attempting to acquire 50 locks in parallel in production?
  - I tried this and it didn't seem to trigger the bug
  - Is this correlated with high disk activity?
- will fix bug with concurrent syncs from iCloud client by enforcing a build timeout in sync/set.js so we can accurately set the upload request timeout for the iCloud client (line 63 of upload.js)

Fix bug with iCloud client which doesn't surface / handle removed folder
- to reproduce, connect to icloud then delete the folder

Fix bug with cancelled subscriptions that keeps the account around
- finish script to identify long-expired customers with blogs to safely delete and free up space. 
- Sort by date expired
- Write script to safely delete blogs
  - wipe blog folder
  - wipe static directory
  - wipe all keys
- Automate the deletion of canceled /  failed accounts after a 2 month grace period, with warning emails  

Fix bug with overdue subscription payment form not working
- Possible bug introduced by recent stripe upgrade
- Migrate [Stripe library to v7](https://github.com/stripe/stripe-node/wiki/Migration-guide-for-v7)

Fix bug with ['Home.md' file in botteghe](https://mail.google.com/mail/u/0/#inbox/KtbxLwGgDrgCPfhXfHknhvjPLzzGjMXtnq) folder on the site navigation
- Something seems to clobber on the navigation with the existing 'Home' link

Fix bugs with custom domain setup
- Enter invalid domain and get (message 'domain removed') instead of error
- Validate the domain is pointing to Blot before allowing resty-auto-ssl to request a cert. we seem to get into a DNS mismatch where a client thinks a domain points to Blot, and triggers a cert request through resty-auto-ssl but whatever DNS server Blot's server points to has the stale record (pointing elsewhere)
- Disable redirect to HTTPS for blogs by default (to ensure old browsers without SNI work) but ensure all prominent links to the blog on dashboard use HTTPS
- cache domain validity and display checkmark on dashboard

Fix bug where changes to documentation CSS do not make it into production:
- stale servers serve the old CSS 
- purge bunny after deployment complete?
- can servers share the tmp dir views directory?

Fix bug with Documentation template and the setting 'Adds zoom to large images' and [tell customer](https://mail.google.com/mail/u/0/#inbox/FMfcgzQbgJMGTSPcnwTNxVJVPZZnrhJB)

Fix bug with huge tiddlywiki post that crashed site by enforcing a size limit on txt and markdown files and html files for them to become posts
- Ensure the error for files too large is made clearly visible

Fix bug with incorrect date of files by path and follow up with [Ashish](https://mail.google.com/mail/u/0/#inbox/FMfcgzQbgJMGBfxXGrhsDPbNJfnbZVCW)
- `/posts/2021/Dec 2021/12-01 - Snow envy/Snow envy.txt` isn't dated correctly (should be first of december rather than january 12th)

Fix bug with camelCase custom metadata and tell [questioner](https://blot.im/questions/2294)

Fix bug with link format using filename and [follow up with yct](https://mail.google.com/mail/u/0/#inbox/FMfcgzQZTMLqzhtlSBrtFqNDFDdXPSfk)

Fix bug with light mode colors and tell [Gary](https://mail.google.com/mail/u/0/#inbox/FMfcgzGwJSCRWXMlsPRVBsnrcRcbMklc)

Fix bug with first edit on forked template on template editor:
- 1. open template editor for fresh blog
- 2. change the text color
- 3. nothing happens (due to the inital fork) until you reload the page

Fix bugs with git client
- Investigate a bug with git client credentials triggered when you have two sites using git on one account, and delete one of the sites
- Fix bug which occurs when you change your username while using the Git client (caused by the broken repo url) and tell [Koen](https://mail.google.com/mail/u/0/#inbox/1670f516115ef9bd) and [Andre](https://mail.google.com/mail/u/0/#inbox/FMfcgxwDqfMMxJXpbTZLvGzVmZlFPNfk) and [Josh](https://mail.google.com/mail/u/0/#inbox/FMfcgxwDqnkxhvtmPpdMMkRPjzpktrxG) and [Ryan](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGCGthpSTxskRFFVjtrGnhnSvh) and [David](https://mail.google.com/mail/u/0/#inbox/FMfcgzGllVjvNfvdDVmnmlRvrFsNnQSD)
- Work out how to pipe custom error messages down
- Pipe custom message when you change a blog's handle (breaking repo url)
- Tell [Koen](https://mail.google.com/mail/u/0/#inbox/1670f516115ef9bd) about the broken repo URL fix

Fix bug so that script 'fix' is able to remove tag items without posts
- how to reproduce this bug?
- it seems there is a phanton entry which no longer exists on a tag index
- can we iterate over all tag keys during fix to detect this?

Fix bug for 'edit this page' link in production

Fix bug with images zooming inside footnotes and tell [Nathan](https://mail.google.com/mail/u/0/#inbox/FMfcgzGtwWCBmtldhMfQRgZjHDpFvSGb)

Fix bug with menu which occur when multiple pages are added at once Menu needs concurrency or atomic operations (so we can build posts in parallel)
- move menu into its own model (it's possible to add thousands of entries to it...)

Fix bug with navigation link with blog tempalte and tell [Jason](https://mail.google.com/mail/u/0/#inbox/FMfcgzGrbcCBmkcVhfWTpZbmqndwXQrL)

Fix bug with [date metadata](https://blot.im/questions/936)

Fix bug with this [question](https://blot.im/questions/648)

Fix issue with git client mirroring on GitHub by follow steps in email and follow up with [n](https://mail.google.com/mail/u/0/#inbox/FMfcgzGqPzKcnQKsQQNkzcRpvCWpWKTr)

Fix bug with the typeset settings do not actually affect anything (you can only disable/enable)

Fix bug where one bad page can take down upstream repeatedly 
– perhaps we need to cache in proxy cache timeouts? or somehow detect if a request causes upstream to crash?

Fix bug with rename detector which caused old permalinks not to redirect to their latest version and tell [Shibel](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChSMBfbsZQQSGSjtghSHKKVzm)
- To reproduce, create file 'foo.txt' with title and permalink 'foo'
- Then turn off server
- Then rename file to 'bar.txt', and edit title to 'bar' at the same time
- we expect /foo to redirect to /bar, but it doesn't

Fix bugs with templates:
- Fix bug with videos on Reference template and [Tell Marco](https://mail.google.com/mail/u/0/#inbox/FMfcgzGslbPSKMXkRbvrHKFTWhbJbPlg)
- Fix post navigation on Portfolio template and tell [Questioner](https://blot.im/questions/1894)
- Fix responsive thumbnail component on photo template (it loads large thumbnail every time)
- Fix 'back' button in photo template and tell [Bibi](https://mail.google.com/mail/u/0/#inbox/FMfcgzGrcPJTmPXxWvhbmFpvwdfVzhpn)
- Fix side navigation on Blog template and tell [Sava](https://mail.google.com/mail/u/0/#inbox/FMfcgzGwJcgnPdxPcSqPwmMnFSThFMQg)
- Fix bug with [date on magazine template](https://blot.im/questions/2244)
- Add layout fix to blog template and [tell Lewis](https://mail.google.com/mail/u/0/#inbox/FMfcgzQVzFWlSFWmjZrDMrMjPtmtWwQc)
Fix bug with [header position on the blog template](https://blot.im/questions/2211)
- Make 'close' button on entry permalink page of reference template work like the photo template and tell [Marco](https://mail.google.com/mail/u/0/#inbox/FMfcgzGsmNSSSRKHnlgCBllnqJCcPhxD)

Fix bug with [many twitter embeds and tell Nash](https://mail.google.com/mail/u/0/#inbox/FMfcgzGllMNfjvRBthVncQtPJQpmrksx)

Fix bug with template tags in blog post and tell [Shibel](https://mail.google.com/mail/u/0/#inbox/FMfcgxwCgCJQhBZwgzQVLkKHnwPKVkFC)

Fix [Frank](https://mail.google.com/mail/u/0/1527fbcf999ba0c3)'s strange template bug

Fix bug with a once-scheduled post, based on the file's path or previous date metadata. The post remains scheduled even if the date is removed, and even if it is then rebuilt.

Fix bugs with template engine:
- Prevent double submission on template editor at insertion and front-end levels
- Make it possible to rename template directories and tell [Darren](https://mail.google.com/mail/u/0/#inbox/FMfcgzGwHxvsmgwbnxLbDMNDplTLltlc) and tell [questioner](https://blot.im/questions/1610)
- Fix bug not exposing issue with invalid JSON in package.json for locally-edited template on dashboard and tell [Jason](https://mail.google.com/mail/u/0/#inbox/FMfcgxwKjndBRlNNjZtlddcVVfFWVBbg)
- Investigate bug with template views whose names include hashtags and follow up with [Jay](https://mail.google.com/mail/u/0/#inbox/FMfcgzGqPzMvLDJBfbNfLzpkKDzmZSNt)
- Fix bug with undeleteable template files prefixed with dot and tell [Stuart](https://mail.google.com/mail/u/0/?zx=j8rkxjpin0du#inbox/FMfcgzGqRZbhWzrwNrgrFLQBBDWBzhxL)
- Fix bug with template editor and ensure POST error messages are passed to client properly through ajax
  - to trigger, submit a >5mb file on web template editor
- Fix bug with chinese characters in template name and follow up with [Alex](https://mail.google.com/mail/u/0/#search/alex/FMfcgzGqRGTCSrMXTznCBvTWhQqvkgCL)
- Fix bug with date settings on the template editor for [magazine template](https://blot.im/questions/2244)
- Fix date selector for template and tell [Zach](https://mail.google.com/mail/u/0/#inbox/FMfcgzGxTFSjkTvfDRgNHZwSQqDzWKFB)
- Fix bug with forking / editing new templates and tell [Jarrod](https://mail.google.com/mail/u/0/#inbox/FMfcgzGrbRSDCZqMwzjDdqdGCkScxpsw) when local template folders better reflect template names

Fix bug with script to import wordpress posts and follow up with [Simon](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGCtMPcJhlmcdNvWwtWvgzWJvZ)

Fix issues with menu links based on case-sensitivity switch

Fix issues with bad permalinks based on case-sensitivity switch

Fix bug with [bulk redirects page](https://blot.im/questions/2385)

Fix bug with date metadata on [Vincent](https://mail.google.com/mail/u/0/#inbox/FMfcgxwJXVMdhvCJPXwVVSKRTFHQTQzn)'s blog and follow up. I suspect it's to do with the ordering of date tokens.

Fix bug with tokens inside blog posts and follow up with [Karoly](https://mail.google.com/mail/u/0/#inbox/FMfcgxwJXfkFdhXCgBCTwGfBCzPhqwJF)

Fix bug with potentially TeX-related escaping issues and tell [Anthony](https://mail.google.com/mail/u/0/#inbox/FMfcgxwJWhzZspbBhTCPBGjvnslgrZlb) and Roy

Fix issue with variable passed to dateFormat function and tell [Leo](https://mail.google.com/mail/u/0/#inbox/FMfcgzGqQJlfVpSBNBwDxcSlGGqHXQbh)

Fix bug with image zoomer on mobile devices and tell [Alessandro](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChSCwptjLtLGMjWxdkQNnNfTk)

Fix bug with handling of queries and tell [this person](https://mail.google.com/mail/u/0/?zx=tqp989l7y4yi#inbox/15b575fbc8d80ad1).

Fix bug with Work out why Pandoc cannot handle 'linked' images (instead of conventionally embedded images). For instructiosn on reproducing bug, see [SG's email](https://mail.google.com/mail/u/0/#inbox/FMfcgxvzLhcqMVrZbNlKTcVmxVHwRmJC) and follow up when resolved.

Fix bug with tags that contain slashes and tell [Jack](https://mail.google.com/mail/u/0/#inbox/FMfcgzGpFgzpsCkCMGqnClfqMkWZqNNz)

Fix bug which prevents the CDN url replacer working for drafts
- Refactor so the draft route relies more on the middleware function
- At the moment, drafts bypass a lot of the code – many template features won't work

Fix bug with git client which occurs when you change your username with the git client

Fix bug issue with switching from Dropbox client to Git client, in production which affected Nat

Fix bug with template error causing server to go down (issue with folder rebuild)
    reproduce bug with chinese template?

Fix bug with search for 'Raycast' and [tell Anders](https://mail.google.com/mail/u/0/#inbox/FMfcgzQbfBqJWDdrvFDKrkJZjjLVFPTl)

Fix bug with Google Drive on Mark's site which unneccessarily re-downloads some (all?) files on sync rather than using the correct hash and tell [Mark](https://mail.google.com/mail/u/0/#inbox/FMfcgzQZTVmrvkvcfPvcJhcLvrwSndWS)

Fix post encoding bugs
- Fix [Kevin](https://mail.google.com/mail/u/0/#inbox/1665be131ce98928)'s URL encoding bug. Each entry's url property is not encoded as a URI component on the server but it needs to be.
- Fix encoding bug with greek URLs then tell [Rodericus](https://mail.google.com/mail/u/0/#search/rodericus/15bb13fafc1c34e5) know

Fix bugs with git removed / renamed file unit test on Travis

Fix bug with slashes in tags and tell [Dave](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHMjqlPTzJxBPcQPnGsQsPSsvh)

Fix bug with file list on dashboard in Safari and tell [Ryan](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHMGHzLwclHfnvjZrvfsvTQdGf)

Fix bug and tell [Vanessa](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLswJQjKhnLpNZzfPhJZpVtcph) which injects `<p>` tags 

Fix bug with blockquotes and tell [Kerim](https://mail.google.com/mail/u/0/#inbox/165b813e36c5ad67). Multiple ">" symbols on the blank paragraphs between other quoted text are not formatting properly.

Fix bug with indented code in pre tags and tell [Michael](https://mail.google.com/mail/u/0/#inbox/166704e2c0187e5c)

Fix bug with nested Markdown and tell [Martin](https://mail.google.com/mail/u/0/#inbox/FMfcgxwDqnhgBjBSKzvtclvqcFcMptMR):

Fix bug with with initial transfer and [Michael's folder](https://mail.google.com/mail/u/0/#inbox/FMfcgzQZTptZPWFlcHhJCqZRTxThqvKn)

Fix bug with [Rodrigo's Word Document files](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVWRXqnjmjBDmcRXKcdxjcDfr)

Fix bug with image minification which produces larger file than source file and tell [Jan](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBTkHlNvhcJLGVRCPvXvjbwsWR)

Fix bug parsing ISO8601 date format and tell [Thomas](https://mail.google.com/mail/u/0/#inbox/1625012def221a8f)

Fix bug with pages not appearing in backlinks and [tell questioner](https://blot.im/questions/2913)

Fix bug with magic text in posts which breaks backend and tell [Victor](https://mail.google.com/mail/u/0/#inbox/FMfcgzQVxRMzjBtRWVwLWtlBcFGsSVCQ)

Fix bug with Google Drive client and [Stephen's large blog](https://mail.google.com/mail/u/0/#inbox/QgrcJHsBsbkNkMkkkMmLWBxRfnGnWPVwLHl)
  - It also seems like server crashes when a massive google drive folder is synced, with a directory containing 6772 items

Fix bug with some blogs are accessible after deletion

Fix iCloud bugs
- Work out issue with iCloud disconnect / setup with [Florian's folder](https://mail.google.com/mail/u/0/#inbox/FMfcgzQZTzSJsxwwRTMNxWTMrGCQXTlh)
- Investigate the 500 timeout errors – are these caused by pending syncs / folder locks?
  - tail -n 1000000 /var/instance-ssd/logs/access.log | grep " 500 " | grep "/clients/icloud"
- Why are there unrenamed folders in the mac server icloud drive?
  - partial incomplete setup? sharing a non-empty folder? 
- Smooth over setup process, add guidance for 'mode' of share panel (e.g. copy vs. collaborate) and maybe a screenshot

Fix bug with [navigation on blog template on mobile](https://blot.im/questions/3137)

Fix issue with template settings and tell [Dirt](https://mail.google.com/mail/u/0/#inbox/FMfcgzQbdrQRPKNbMkwscffXLqSLGqjr)

Fix bug with Bruce's local template, [possibly related to Ryan's issue](https://mail.google.com/mail/u/0/#inbox/FMfcgzQbdrKgBjjDKTqMbltHHhplfZsr). The template switches from 3 to 2 after each sync.
- Also affecting [Chris](https://mail.google.com/mail/u/0/#inbox/FMfcgzQbdrRbHMFllcTBGXPJBNKBcLjr)

Fix bug accessibility issue with menu links reordering and tell [Grace](https://mail.google.com/mail/u/0/#inbox/FMfcgzQbfBpBkKCLVRWBGxzDDDkhSXfl)

Fix bug with accessibility issues with scrolling and code blocks and tell [Eli](https://mail.google.com/mail/u/0/#inbox/FMfcgzGtwqJjjrrGHDWjLPzfxGpnkZTh) if I make any changes

---

Do preview subdomains respond to etags?

Switch from mustache to handlebars
- Precompile using template content hash
- Add strict verification for output differences 
- Can we generally do a ‘static’ build out directly into a cache (e.g. openresty)?

Identify areas of the codebase which need resource limits to be more secure, e.g. max file size for the image converter, max file size for the docx converter. look across the codebase and create a series of implementation tasks for the most pressing

Modify slowest function to aggregate by upstream response time
- amend daily update:
- send daily report of slowest URLs 
- send daily report of biggest URLs and bandwidth

Build out simple discover page with links to publish in daily email

Think about how to improve the efficieny of the app/views/js/sync_status.js response from the server when loading the new contents of `.live-updates`. perhaps we could intercept send requests and use cheerio to filter out everything except the live update div? or some other method? and once we do that we could then leverage etags for improved performance too

Add screenshot feature to macserver:
1. Under `app/clients/icloud/macserver/`, introduce a reusable screenshot service (e.g., `screenshot/index.js`) that encapsulates the current Puppeteer workflow from `app/helper/screenshot/index.js` (viewport options, Bottleneck throttling, retry/restart handling). Ensure it accepts `{ url, width?, height?, mobile? }`, returns a PNG buffer, and handles cleanup/restarts just like the existing helper.
2. Add an authenticated Express route (`routes/screenshot.js`) that validates the request body, invokes the new screenshot service, and streams the PNG bytes with `Content-Type: image/png`. Register it in `macserver/index.js`.
3. Extend `app/clients/icloud/macserver/package.json` with any new dependencies (`puppeteer`, `bottleneck`, etc.) required by the migrated implementation.
4. Replace the implementation of `app/helper/screenshot/index.js` so it becomes a thin HTTP client: read `config.icloud.server_address` and `config.icloud.secret`, POST the screenshot request (including optional width/height/mobile) to the macserver endpoint, stream the binary response to the destination path, and keep the existing retry behavior for network errors.
5. Update the screenshot unit tests to exercise the new HTTP client (spin up a fixture server that mimics the macserver response, assert file output, and keep rate-limit coverage). Adjust any other code paths (e.g., `app/site/tests/util/setup.js`) that import Puppeteer so they either switch to the macserver flow or conditionally skip when Puppeteer is no longer present.
6. Remove Chromium/Puppeteer-specific setup from `Dockerfile` (package installs, `PUPPETEER_EXECUTABLE_PATH`) and drop the Puppeteer dependency from the root `package.json`, ensuring documentation or deployment scripts (e.g., `scripts/deploy/constants.js` if applicable) reflect that the main container no longer bundles Chromium.

Create abstract models/storage that could be used to eventually migrate blog data folders onto s3:
- 1. Add `app/storage/index.js` that exposes namespaced helpers (e.g., `storage.blogs.resolve(blogID, relativePath)`, `storage.blogs.readFile`, `storage.static.writeFile`) implemented with `fs-extra` and the existing `config.blog_folder_dir` / `config.blog_static_files_dir`.
- 2. Move the path normalization logic from `helper/localPath.js` into the new storage module (or have `localPath` call the storage API), keeping existing validations intact.
- 3. Provide unit coverage mirroring `app/helper/tests/localPath.js` to confirm the new abstraction still resolves paths correctly for typical blog IDs and paths.

Improve server performance by 1. Create `app/build/plugins/folderAssets/index.js` that exports a `render` handler; reuse the logic from `app/blog/render/replaceFolderLinks/html.js` and `lookupFile` so it asynchronously rewrites `<a href>`/`<img src>` etc. during build-time processing to CDN urls, resolving the correct case where needed.
- 2. Register the plugin in `app/build/plugins/index.js` so it runs for HTML entries (respecting `options.isHTML`) and make it default-enabled for blogs.
- 3. Add new tests under `app/build/plugins/folderAssets/tests` to confirm the plugin emits CDN URLs and leaves untouched cases alone.

Can we use lightningcss to replace the existing css minifier for performance?

Transformer should short-circuit network lookups to {{config.host}} or {{cdn}} urls and pull the files directly
- and have limits on resource size and time

Migrate JSON blob entry into a redis hash:
- Use hash to store entries rather than a JSON string:
- app/models/entry/get.js
- Every time a single entry is fetched we retrieve a full JSON string then JSON parse it.
- I want to switch to using a redis hash and make it possible to query single entry properties, e.g. html, title
- Do we have enough space in redis to essentially duplicate every entry?  maybe make it possible to store an entry as both a hash and a string initially (with hash as source of truth in case of conflict). we'll need a script to run to migrate existing entries in the db. once the migration is complete, we can remove some of the doubled code
- * Extend `app/models/entry/key.js` with a helper that returns the Redis hash key for an entry (e.g., `entryHash(blogID, path)`), keeping the existing string key untouched for backward compatibility.
* Add a serializer/deserializer utility (new module under `app/models/entry/`, e.g., `format.js`) that can translate between `Entry` objects and hash field payloads (strings stay raw; other types use `JSON.stringify`/`JSON.parse`).
* Refactor `app/models/entry/get.js` to accept an optional `fields` argument (string or array). Use `multi` to `HMGET`/`HGETALL` from the hash key and fall back to the JSON key when the hash is missing, reusing the serializer to coerce types. Ensure single-field calls return the scalar when only one entry is requested, while preserving existing behaviors for callers expecting full `Entry` objects.
* Cover the new pathways with unit coverage (or targeted integration coverage) once tests are runnable, verifying full-entry fetches, hash fallback to legacy JSON, and single-field lookups.

Add [preload=none](https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/audio#preload) to all audio and video tags without it defined or maybe preload="metadata"? 

Speed up 404s
- Analyze req trace
- Remove case insensitive lookup and add path resolution to plugins
- ensure all dropbox folders are reset and re-synced

Work out how to easily have a different page_size for the tagged pages vs the index page
- can we get rid of blog/tagged.js and update the urls of existing tagged.html files to have dynamic routes?

Add size / time limits to image caching function which fetches remote images

Improvements to template engine
- Performance improvements
  - Limit number of posts in rss feed to 15 (modify recent entries?)
  - Add pagination to /tagged
    - should resolve issue with `https://eli.li/tagged/og`
- Improve various performance issues with archives page and sitemap on large sites - maybe allEntries only retrieves some properties and paginates through rather than a single request?
  - highlighted by `https://jimhardy-datascience.com/search?q=2026` and `https://www.nitinpai.in/archives`
  - basically, we need to modify the template engine to save the properties of each entry requested, then use this in entry.get, then update entry to use a hash rather than a json blob.
- why is the feed so huge? are we compressing feeds? so slow for nginx?
- we need to modify the template engine to extract which properties of the entry are used, then pass this into entry.get to reduce memory usage significantly for large sites.
- maybe write tool to check before/after for lots of test sites? real life sites on blot? error if diff, or offer chance to test?
- Add a related entry list and tell [David](https://mail.google.com/mail/u/0/#inbox/FMfcgzQbdrPGTsMcvgWpNsNtmrkWRzDz) and [Thomas](https://mail.google.com/mail/u/0/#inbox/156dbe97153fab61) and [questioner](https://blot.im/questions/1484) and [questioner](https://blot.im/questions/3123)
- Consider adding support for nested page structure - generate nested menu items from nested folders in /pages
- Make it possible to query recent entries by tag and tell [Peter](https://mail.google.com/mail/u/0/#inbox/FMfcgzQZTMPKDrgrtVnjTnLtMZNHldvZ)
- Assign guid template IDs
- Assign unique path to template
- Assign template withs with full filename
- Make writeToFolder more efficient by not removing the entire folder each time (only remove orphaned files) and by no rewriting identical files
- Add search bar to template editor
- Make syntax highlight dark mode light mode compatible somehow?
- Work out why rebuilding template from folder clears cache even if the template is not changed
  - stop this
- Make it possible to source a template from a github repo (live) and tell [Nash](https://mail.google.com/mail/u/0/#inbox/FMfcgzQcqQsfKSVWzTCTcMxlJzRWQwpq)
- Add new template lambdas
  - Whitespace trimming and tell [Chad](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChmTsrnBLkSXfNXKDtXdNFjfk)
  - Number formatting (e.g. add commas to int.) and tell [Chad](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChmTsrnBLkSXfNXKDtXdNFjfk)
- Make template slug seperate from the template ID, simply for human readability
- Tell [bukit](https://mail.google.com/mail/u/0/#inbox/FMfcgzGtwqMCsWCjhPcWpPszlZhtqNnM) when it's possible to change the URL of the /tagged/x pages in the template engine
- Investigate performance of rich text editor in Safari on template editor and follow up with [Rachel](https://mail.google.com/mail/u/0/#inbox/FMfcgzQXKNFKbzhWFnsgQrBBfGqZNMhL)
- Make it possible to change URL of tagged pages and tell [Jarrod](https://mail.google.com/mail/u/0/#inbox/FMfcgzGqQvxkjzVJFTpMQSNJRzptKkdH)
- Add blog.statistics and entry.statistics (total words, etc.) and tell [Pratik](https://mail.google.com/mail/u/0/#inbox/FMfcgzGmtDzMRWDrnBcZmXBmCWtvbwJD)
- Work out how to make live but saveable modifications for preview purposes on the template editor. I have already established a messaging channel between preview HTML pages and the template editor with the script injected in render/middleware.
- Add [background patterns](https://bansal.io/pattern-css#checks) to template editor tools, tell [Ish](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHMsVFZBwLtkGslXZXkcxmKdvf)
- Add 'group by' function which would allow you to group posts by month/ year in the same way that {{#archives}} lets you and tell [Jay](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLtGkSQnQDJRMcxKZhgQfbXvSF)
- Respond to Michael's [thoughtful emails](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDWqXmTLfljkKdGlfFMhMdkTm) about the template system
- Add support for chronological template ordering and [follow up with questions](https://blot.im/questions/819) 
- Add way to iterate over public and private pages to allow sitemap to work properly
  - tell [Rodrigo](https://mail.google.com/mail/u/0/#inbox/FMfcgxwDsFffNqTnCTjHrNSrrLBtnnGW) 
  - [questioner](https://blot.im/questions/222)
  - Tell [Steve](https://mail.google.com/mail/u/0/#inbox/FMfcgzGxTNsdCppzndskLsxJpvgsdgjv)
  - [Jack](https://mail.google.com/mail/u/0/#inbox/FMfcgzGxTFbfvLCqlhWckvZqTmNPPqSM)
- Allow the name/slug of a template to change and tell [Marcus](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChSCwzPxFLvSpLcjjRbCkVVbg) and [Pratik](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDDqldQjWRSnwmcMbcpRMHMxL) and [Brad](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGCkmWNjfwTqvrTgJLCSpDcDfk) when the name of a locally-edited template in your blog's folder updates
- Allow ordering of posts by file name and tell [Jacopo](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHNCrgCFZKKzdvTFVvWHCpQChM)
- Expose request query to views and tell [Abhishek](https://mail.google.com/mail/u/0/?zx=ppqfw9q0jli#inbox/FMfcgzGljvQfHMktFrRNKQWqsxKQWSGZ)
- Add way to query list of posts using SQL? Something like [jsql](https://archive.codeplex.com/?p=jsql)
com/mail/u/0/#inbox/1588e3df7489b554) 
  - [Don't write my own DSL, use SQL](https://news.ycombinator.com/item?id=17890760) Something like this in front matter? recent_posts: SELECT POSTS WHERE ...
  - Add support for entry lists of variable length and tell [Logan](https://twitter.com/LoganGreer)
- Add support for the setting of custom headers (e.g. to enable CORS) and tell [Roy](https://mail.google.com/mail/u/0/#inbox/FMfcgxwDrRShkTjNqPxcnPjFcGthZgbh)
- Add support for listing files in arbritary folders (e.g. use a custom folder as a 'public' folder) and tell [Nash](https://twitter.com/nashp/status/1111655667817947137) and [Marco](https://mail.google.com/mail/u/0/#search/marco/FMfcgzGmvBrxCgvXVhZQsbdzpgDktSGV)
- Add way to list directory contents and tell [Diego](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHMZJtkqxhLVWXqdxNVchgGQzp)
- Move to data directory for templates
  - Serve the template directory as a static folder, allowing things like favicon.png and humans.txt to not become blog posts. Follow up with [Jamie](https://mail.google.com/mail/u/0/#all/FMfcgxwBVMpMKkNJwJtvbQVFvbmHqHpl)
- Re-do url redirector to use route-parser and properly support regular expressions
- Add support for paginated list of entries on other pages and [Dan](https://mail.google.com/mail/u/0/#inbox/FMfcgzGrcrtWVPZdQnHxXtmFsxDtWVrV) tell [Kevin](https://mail.google.com/mail/u/0/#inbox/FMfcgxvzLhlvZxhQwWfJmKhnXgkPnmJC) and [Eli](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVDJhGpffNsZDjCszcstGVsGh) and [Sven](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChJhhfPCqLCXWxtnJsxNfWKdM) and [Nikhil](https://mail.google.com/mail/u/0/#inbox/FMfcgxwDrvCRFcMTRcgMJdcCkxSNChXq) and [Adam](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHMsQczfjJBHpBSlxTmgxXMQKr) and [Madino](https://mail.google.com/mail/u/0/#inbox/FMfcgxwJXflPbzPWJQdgCxxrSWbzRDWT) and [Ryan](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLsdFCmRCKzvxTgchlZJzdhwQd)
- Add dynamic querying of entry list and tell [Naoki](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHMjtCWmHCBZWsVPTCftbQCZTn)
- Fix bug with filtering paginated list of entries and tell [Roy](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVgrQJWNPHHvdxnMtWCGJkZdM) and [Josh](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVzrFNFzLzbWrssWzbrSvtpTm) and [Logan](https://twitter.com/LoganGreer)
- Add a popular entry list
- Add way to auto-refresh page during template development on preview subdomains. Tell [Ryan](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVDHXWxBGqwNlmsmgZjbnHXvg)
- Add way to list files at a path and tell [Matt](https://mail.google.com/mail/u/0/#inbox/FMfcgxwDqxRmLMrTjjpjftkSwddPJkTm) and [Daisy](https://mail.google.com/mail/u/0/#inbox/FMfcgzQXJkVbjxQbLgTRTJrhGtjBblCP)
- General:
  - Add paginateable entries list
  - Add downloadable sites
  - Add static file uploader
  - Make templates folder based?
    - data/templates/blog_id/template_name
  - Add webfont uploader
  - Generate favicons of different sizes from uploaded image
- Re-enable partial templates in posts/pages
  - Tell [Matt](https://mail.google.com/mail/u/0/#inbox/FMfcgzGpGwrFkhsBptjFjjmRcNHSBsGX)
- Add pagination to archives and tagged pages on default templates using a new tag
- Inject title metadata into h1 tag for all the text-based default templates and tell [questioners](https://blot.im/questions/795)
- Add 'download as zip' option to template editor
- Create starter kits for each template
  - e.g. a starter kit on the blog template for a writer, or a photographer, or a journalist, or an academic.
  - these could be downloaded as folders on the template page?
  - Get [David](https://mail.google.com/mail/u/0/#inbox/FMfcgzGpGnDfkQbzQqMVDndbNVzwCWZC)'s feedback when one exists for writers
- Create an index of customer-created templates and add [Matt's theme](https://www.mattlangford.com/kalena-template-for-blot)
- Add 'Hidden: yes' metadata to replace 'Menu: no' and tell [Sebastien](https://mail.google.com/mail/u/0/#inbox/FMfcgzGmvTstgvzhzNkPFXdgStpTJvrN)
- Add method to merge updates into custom templates and tell [Dave](https://mail.google.com/mail/u/0/#inbox/FMfcgzGpGnDfkQbzQqMVDndbNVzwCWZC)
- Redirect URLs with trailing slash when possible (i.e. not directory browsing) to [fix possible duplicate content penalties](https://moz.com/community/q/duplicate-content-with-a-trailing-slash) and tell [Marius](https://mail.google.com/mail/u/0/#inbox/FMfcgxwKkHhPFPKFBzQjQQHwlrRWwbKq)
  - Add rel=canonical to all the default templates, or resolve the problem that Blot serves the same thing to URLs with a trailing slash, and without. 
  - If we do add rel=canonical, make sure to consider the situation where someone mounts a page to the index of their site, e.g. /page/1 and / will now be different.
- add support for dynamic partials to make collections possible, e.g. {{> /:tag.html}} ?
- Add neat interface to customize blog level variables?
- How do we transition from a global date display format to one that templates have control over?
- Consider making file-based template directory a git repo and using this to implement basic undo-redo functionality.
- Disable re-rendering for locals
- Add better customization options
- Local template editing does not clear cache
- Use Hogan for precompiling and rendering templates for performance?
- Parse tokens and params from routes and tell [Jason](https://mail.google.com/mail/u/0/#inbox/163186d43aaf52af)
- Add way to allow all entry lists to access {{#months}} sorting options just like the archives page.
- Tell [Marco](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHNWCgxHCttPshJRSPCMTPffMP) when arbirary list sorting is ready
- Add support for fetching only some properties of an entry (ideally only those that are used). prevent some properties from being fetched in some lists (html, for example in all_entries). Would be a good candidate for hgetall or hget?
- Incorporate some of [notebook](https://github.com/WesleyAC/notebook)'s features in a template

Launch new server and test that the new scripts to mount the instance store and data ebs-disk work

Automate the detection and removal of long-overdue sites (> 1 year)
- Prevent long-overdue customers from accessing the service, then tell [Matvey](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHNgWvzTkMVZXFrSpjGfcCrWJG)

Implement toString for all existing template lambda, see retrieve/updated.js for an example
- Map {{date}} => {{#date}}...{{/date}} and {{#updated}} and {{#created}} etc.
- Update developer docs
- Can we use this technique elsewhere? Simple string vs. function...

Improve folder to CDN pipeline
- Could we respond with redirects to Blot's CDN?
- Why isn't the WAV file in this footnote being properly replaced with a CDN URL?
  - it's because it contains URL-encoded chars – replace 
  - `https://diwank.space/field-notes-from-shipping-real-code-with-claude`
- Why isn't this file?
  - `https://yangrobotics.com/posts/peng-2.md`
  - possibly because it's a fully-qualified URL? we need to handle these I think
- Maybe all 'asset requests' should return 302? even 301 if the url is versioned?

Add per request resource monitoring, e.g. heap size before/after

Tune proxy next upstream status code conditions to preserve zero-downtime-deployments but prevent expensive requests (timeout?)

Move image zoom plugin to templates
  For each blog:
    if image zoom plugin enabled:
      for each template:
        inject required CSS just above {{{appCSS}}} and save
        inject required JS just above {{{appJS}}} and save
      disable image zoom plugin
  Remove image zoom plugin

Review, revise, test and run redis orchestration script to restore from s3 backup into new instance

Migrate repository to new account

Add webmentions plugin point-and-click on dashboard

Improve iCloud client
- Resolve flakiness disconnecting, transfering existing folder contents
    ## 1. Harden sync pipeline
    - [ ] Add integration tests covering end-to-end sync flows via `sync/toiCloud.js` and `sync/fromiCloud.js`, including handling of deletions, renames, and empty files.
    - [ ] Implement retry and backoff logic around mac server HTTP uploads (`macserver/httpClient/upload.js`) and downloads (`macserver/brctl/download.js`) to recover from transient iCloud errors.
    - [ ] Enforce a configurable timeout and cancellation for build jobs triggered by iCloud sync events to avoid the concurrent sync bug referenced in `sync/set.js`.

    ## 2. Improve failure detection and reporting
    - [ ] Expand monitoring in `util/monitorMacServerStats.js` to include latency/health metrics for the mac server watcher (`macserver/monitorer.js`).
    - [ ] Emit structured logs for sync actions with correlation identifiers to aid debugging across the mac server and main server.
    - [ ] Surface actionable error states on the dashboard (`routes/dashboard.js`) so users know when their iCloud folder is disconnected or low on space.

    ## 3. Safeguard shared folder lifecycle
    - [ ] Ensure `initialTransfer.js` and `sync/toiCloud.js` gracefully handle folders removed or unshared mid-transfer, surfacing a clear recovery flow.
    - [ ] Add background reconciliation (`util/resyncRecentlySynced.js`) that re-validates folder permissions and resyncs divergent files on a schedule.
    - [ ] Extend setup flows (`routes/site/index.js`) to validate sharing links and alert when the mac server cannot access the shared directory.

    ## 4. Resource management on mac server
    - [ ] Add guardrails in `macserver/watcher/monitorDiskUsage.js` to trigger automated eviction via `macserver/brctl/evict.js` before the quota limit is hit.
    - [ ] Track iCloud space utilization trends so administrators receive early warnings (leveraging templates in `app/helper/email/admin`).
    - [ ] Validate file size limits at the edge (`routes/site/index.js`) to prevent oversized uploads from reaching the mac server.

    ## 5. Operational readiness
    - [ ] Document recovery playbooks for incidents such as `ICLOUD_SERVER_PANIC` and `ICLOUD_SERVER_DOWN`, including SSH commands and validation steps.
    - [ ] Automate smoke tests that can be run post-deployment to verify critical sync paths and folder permissions.
    - [ ] Provide a feature flag to disable iCloud sync per-site, allowing rollback without affecting other clients.

Reduce service provider risk:
- move domain registrar from AWS to Epik?
- write plan to transition off Bunny if needed
  - ideally all this should involved is changing some DNS records
- test plan to transition off Bunny
- write plan to transition off AWS if needed
  - ideally all this should involved is changing some DNS records
- test plan to transition off AWS

Implement mac server screenshot endpoint
- We should use the helper/transformer to speed up screenshot re-generation

Implement limit for allentries, sitemap, etc.

Set long-timeout for git client requests on reverse proxy
- prevent request retry for non

Add tests for webp thumbnails

Add deploy button to GitHub so I can deploy code while away

Improve the camera make and model names extracted by exiftool using a third-party library, e.g. SONY ILCE-7M3 -> Sony α7 III
- [ ] Tell [Chuck](https://mail.google.com/mail/u/0/#inbox/QgrcJHrhvXLmnzQkFJsDwTvsrSbqBFVgtxV)

Move folder lock location to instance ssd for improved reliability and performance (non-networked drive...) – could be inside the cache

Write about mustache technique for {{#updated}} and {{updated}} to work at the same time (toString)

Pandoc doesn't support autolinking for Chrome's copy link to highlight feature – should we make this work? e.g. `https://stackoverflow.com/questions/71806679/how-to-copy-link-to-highlight-using-chrome-api#:~:text=How%20to%20copy%20link%20to%20highlight`

Run dropbox reset as ec2-user not root
- run chown on all data files...

Extend ignore files feature (currently files starting with _ or folders starting with _)
- tell [Troy](https://mail.google.com/mail/u/0/#inbox/FMfcgzQbdrSjWXGrxztLqjVWwjBtcbzl)
- Ignore files inside 'assets' inside .textbundle directories to improve support for textbundles and tell [Thomas](https://mail.google.com/mail/u/0/#inbox/FMfcgxwCgzDLvlTkKNmfZgnXpzzLZjWN)
- Follow up with [Shibel](https://mail.google.com/mail/u/0/#inbox/FMfcgxwCgpcJbSnrrjHZGqtgschtWwXs) about how to ignore - make it possible to achieve through a global 'ignore' setting on services page of dashboard?
- could ignore all '.jpg' say, or all 'index.html' files, etc.
- Can we add a 'folder rules' section to create ignore globs, multi post globs, etc.
arbritrary paths and keep clean URLS (no underscores). Sitewide .blotignore file?
- does rebuild update ignored files list too?
- handle new pathNormalizer behaviour
- 'ignoredFilesKey'
- why are ignored files not added to ignored list?
- add 'ignored ghosts' check to sync/fix
- Add `Ignore: yes` metadata to trigger the ignored file behaviour

Are there any missing templates because of the switch from lowercase to true case?

Fix template partial embeddings which no longer work because of switch from lowercase to true case:
- e.g. {{> /pages/home.txt}} when pages is really Pages
- we should resolve the case-insensitive path to file when saving a template and parsing its partials

How to fix menu links with incorrect case IDs?
- Write script to catch these and patch

Why do posts on blog_eddd8e5 take so long to set, let alone rebuild?

Clean out all but the neccessary information from deleted entries to save redis space

Make iCloud site routes blocking so the mac server waits for the main server to finish building before sending the next sync update? But consider timeout

Think about how to purge the old versions of files cached by bunny's permacache

Can we avoid changing cache id for a site after a sync with no changes?

How can we serve template files over CDN?
- do we have to remap references to other files in stylesheets since we're doing a switcheroo

Image cacher should work for webp, tiff, etc. as well as JPG

Add script to resync all icloud folders – make sure they are up to date

Check that Google Drive is staying in sync:
- login -> node scripts/google-drive/reset.js
- add proper bottlenecks then run this regularly

Add https://www.textasticapp.com/ to text editor tools

Ensure we handle google doc link cards properly

Write proper tests for clients:
- Dropbox
- Google Drive
    * Build a reusable `nock` helper (e.g., `app/clients/google-drive/tests/nockDrive.js`) that can stub the Drive endpoints used by `sync/sync.js`, `write.js`, `remove.js`, and webhook setup.
    * Add Jasmine specs that cover edge cases such as folder moves, duplicate file names, MD5 mismatches, and quota errors by exercising the high-level functions and asserting that `database.folder` updates correctly.
    * Unskip and modernize `serviceAccount/tests/refresh.js`, using the new mock helper to simulate `drive.about.get`, and ensure the suite runs via the existing `scripts/tests/invoke.sh`.
    * Update the test harness (e.g., by adding the new spec directory to `scripts/tests/invoke.sh` or test globbing) so the Drive client tests execute in CI.
- iCloud

Make initial health check /health more powerful
- inspect blogs directory and verify there are the expected number of folders
- check we can communicate with redis
- verify pandoc is installed and running
- make the initial timeout in the health check longer?
- subsequent requests can just check redis connection?

Use sockets for communication between nginx and node

Why don't empty files sync on the dashboard? (esp. via iCloud client)

Improve speed of production build
- When should folder zipping happen?
- Can we improve build speed by removing github actions cache and using some base image with dependencies?

Convert callbacks to async/await
- literally anywhere in the codebase – use util.callbackify to add backwards compatibility

Try and reorganize code into a cleaner MVC division. It's really the controllers that need to be moved.

Write unit tests for database models which have no tests subdirectory
- e.g. models/404, models/entries, models/redirects

Improve [sidebar blog template navigation on small screens](https://blot.im/questions/3137)

Clamp length of password and email address in log in and sign up and reset forms
- ensure the forms have tight max-bodies
- return an error if these are too long

Improve git client
    1. **Harden sync against transient Git failures**  
      * Add structured error handling and exponential backoff to the fetch and reset steps in [`sync.js`](./sync.js) so transient network or repository errors do not abort the entire sync.  
      * Surface actionable messages to `folder.log` when retries are exhausted to aid diagnostics.

    2. **Persist sync progress for crash recovery**  
      * Introduce a lightweight journal that records in-flight operations in the local blog directory before they execute.  
      * Extend the startup path to replay or roll back the journal if the process restarts mid-sync, ensuring we do not leave the repo in a partially reset state.  
      * Cover this behaviour with an automated test that simulates a restart during `git.fetch`/`git.reset` (see existing fixtures under `tests/sync.js`).

    3. **Validate repository state before destructive actions**  
      * Before running `git.reset --hard origin/master`, verify that the `origin/master` ref exists and that the working tree is clean to avoid losing local edits created outside the client.  
      * If divergence is detected, fail gracefully with guidance for the user rather than clobbering their changes.  
      * Document the decision flow in developer docs so operational playbooks account for these safeguards.

    4. **Monitor and alert on repeated sync failures**  
      * Emit structured metrics (e.g., to StatsD) whenever retries fail or the sync loop exits due to repeated errors.  
      * Add a dashboard surface or notification hook so operators and customers can see when their Git repo needs manual attention.  
      * Backfill tests that stub the metrics emitter to ensure the instrumentation does not break the sync flow.
      
Improve google drive client
    ## 1. Harden service-account webhook lifecycle
    - **Problem**: Changes and files webhooks can expire silently, causing the sync queue to stall until manual intervention. Logs in `serviceAccount/watchChanges.js` and the reset scripts indicate we rely on cron-style resets rather than active monitoring.
    - **Tasks**:
      - Add persistent records for each active channel (channel ID, resource ID, expiration) in the database so their state survives restarts.
      - Create a periodic job to compare expected expirations with Google Drive and renew channels a day before expiry; alert on failures via existing admin email helpers.
      - Extend teardown logic in `scripts/google-drive/purgeWebhooks.js` to remove entries for channels that were renewed or cancelled.

    ## 2. Improve resilience of initial folder setup
    - **Problem**: The setup flow in `routes/setup.js` and `init.js` resets on process restarts, which forces users to repeat sharing steps.
    - **Tasks**:
      - Persist setup progress in the site's database record (e.g., storing the setup step and timestamps) so workers can resume after restarts.
      - Add retries around Drive permission propagation (currently a single attempt) with exponential backoff and user-facing status updates.
      - Write integration tests that simulate restarts by clearing in-memory state while preserving persisted progress.

    ## 3. Detect and repair sync drift automatically
    - **Problem**: Reports in TODO mention phantom re-downloads and missing deletions after Drive folder renames. These indicate our mapping of Drive file IDs to local paths can fall out of sync.
    - **Tasks**:
      - Add a periodic audit job that samples a blog's Drive folder using `sync/sync.js` traversal and compares hashes with local metadata.
      - When drift is detected (hash mismatch, missing file, duplicate title), queue a targeted resync using existing `resetToDrive` utilities instead of a full rebuild.
      - Surface audit findings on the dashboard (`routes/dashboard.js`) so users know when a repair was triggered.

    ## 4. Expand automated test coverage with mocked Drive APIs
    - **Problem**: Failures are often discovered in production because we have limited regression tests (`serviceAccount/tests/refresh.js` is the only automated test).
    - **Tasks**:
      - Introduce a reusable `nock`-based mock layer for Drive HTTP requests so tests can simulate API responses, rate limits, and quota errors.
      - Cover edge cases for file moves, deduplicated names, and quota errors across `sync/index.js`, `write.js`, and `remove.js`.
      - Integrate these tests into CI to prevent regressions when modifying sync logic.

    ## 5. Enhance observability and alerting
    - **Problem**: Errors logged with `prefix()` helpers are not aggregated, making it hard to spot failures quickly.
    - **Tasks**:
      - Standardize log fields (site ID, service account ID, operation) and ship them to the central logging service.
      - Add metrics counters for sync successes/failures and webhook renewals, exporting them to the existing monitoring stack.
      - Configure threshold-based alerts for repeated failures or prolonged absence of successful syncs per site.
      
Speed up templates.build 
- It seems setView already checks for changes
- Try and be more selective about which blog model updates trigger blog.flushCache
- Write now sync updates (e.g. checking /) all trigger blogs to flush cache

Move from EBS to s3
- Goal is cost reduction and improved scalability
  - should lower storage costs + transfer from $200/month to $20/month
  - no more charges for unused GB disk space
  - lower cost of S3 vs EBS
  - no issue of 'running out of space' which has taken down service multiple times
- General considerations:
  - what s3 category to use? standard? 1 zone express? latency is important for some use-cases, e.g. blog folder
  - the static files (e.g. thumbnails) are more long term infrequent access though (because of CDN)
  - do we re-organize how files are stored? one bucket per site?
  - make sure s3 versioning is disabled?
  - how to back up? maybe have a special bucket for blog folder data? everything else is downstream of the folder
- Come up with plan for static files directory
  - rewrite docx, odt, clients to use a temp dir, then
  - create an abstract helper function which can be used to write files to static directory
    - make this file also upload to s3
    - write script to sync existing static files to s3
  - we probably don't need a caching layer for static files since static files will end up in CDN storage after first request
- Come up with plan for blog files directory
 - abstract write / read from blog directory
 - we probably need a caching layer using instance SSD as LRU cache of say 10GB
  - when we rebuild all files on a site, we'll probably want to download all the folder? or maybe just have a SSD LRU caching layer built in that can adapt.
- Rewrite git client as follows:
  - Store bare repos (e.g. blog.git) on s3 as source of truth
  - On push, fetch bare repo from s3 and store it on instance SSD in 'cache' 
  - After push, resync bare repo to s3
  - Compare diff on bare repo to identify changed files
  - For new or modified files, check out those files only to a tmp folder and then copy across to blog folder dir directly and trigger folder.update
  - Remove the live repo from the blog folder dir
  - Other ideas which I decided against:
    - I thought about using an s3fs but it seems risky and likely too slow
 - Once this is done, the nginx + node server is 'stateless' and could be replicated easily across aws regions
 - We could combine this with the containerization of openresty

Resolve bad links (e.g. incorrect case) in files at build-time rather than run-time so we can avoid the expensive disk lookups in blog/assets.js

Use tinify free api to compress some of the folder images?
- maybe consider building this into the main product? it might pay for itself

Add asset library / file upload to template editor and share files across templates
- use this to help implement a favicon feature which minifies the favicon

Extend markdown parser to add a special class to a list of only images for targeting into an image grid or gallery?
- `- ![Image](_image.jpg)...` -> `<ul class="image-list">`... could then be used in CSS?

Extract multiple thumbnails per blog post (as many as there are images) for cooler image grid possibilities.

Add an open folder button to Local folder client
- maybe add a highlevel function which clients can expose to open a file (e.g. link to dropbox.com or google drive)?

Run image analysis on all images in post
- extract colors for searching
- use something to identify related images

Improve tools section

Improvements to questions section:
- Add 'blue dot' notifications icon to updates and questions based on last post
- Add colors to tags on questions section:
  - https://gauthierroussilhe.com/articles
  - https://designportland.org/
- Add a filter for topic index to show questions by: 'Newest', 'Active', 'Unanswered', 'Votes'

Move Dockerfile into app

Clean up scripts directory, lots of unused or broken scripts

Improve importer

Rewrite code which generates a fake 'macOS' folder to work cross platform:
- if the user is browsing from Windows create a windows folder
- if the user is browsing from linux create a linux folder

As much static file delivery through CDN as possible

Get folders out of build images

Start my own interview of customers 'behind the folder'?
- inspired by usesthis and p&b
- which tools they use
- how they organize their folder

Add auto template translator

Re-set up html minification using html-terser

Investigate whether openrestycache can be modified to pre-compress gzip responses
- can we add support for brotli?
- can we use https://nginx.org/en/docs/http/ngx_http_gzip_static_module.html#gzip_static
- should we just be using varnish?

Get critique on full openresty config from LLM

Consider adding varnish in between openresty and nginx and get rid of openrestycache?

Improve developer documentation:
- Add interactive template renderer to developer docs
- Document page_size, sort_order, sort_by properties of templates

Add drag and drop file and folder upload to dashboard

Add global site search of:
- files on site
- posts on site
- documentation
- questions
- templates

Write a guide to using Formspark to add a contact form to a site

Add an option to use the date modified property of the file, rather than the date created property as the publish date. This would be especially useful for the Dropbox client, which nukes the original file creation date but preserves the client modified data. This should be opt in because it could lead to misleading behaviour where an old file is dragged into your folder and is published way deep in your archives. Tell [Dirt](https://mail.google.com/mail/u/0/#inbox/FMfcgzQZTMSlvtWcHcckPtWlJljHVPdH)

Improvements to local folder experience
- Interpolate fonts based on an ID (a la web template editor)
- Interpolate syntax highlighting based on an ID

Use [thumbhash](https://github.com/evanw/thumbhash?tab=readme-ov-file) to generate placeholders when lazy loading images and tell [David](https://mail.google.com/mail/u/0/#inbox/FMfcgxwJXfqzZvHgrtSxzLBCwcvTsFFB) and [Marius](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLtQPwXwJrwgMzjfvDtcwFZzFC)


Surface recently edited posts on the sites tab of the dashboard

We should have a plan to switch CDN from Bunny to Cloudfront in an emergency
- Should be a simple DNS change

Add a plugin using OpenSeadragon to add Deep Zoom capabilities for huge megapixel images so you could publish them directly to Blot.

Can we support white-label cdn subdomain so there are no Blot CDN links?

Change dashboard cookies: Set-Cookie: mycookie=value; Path=/; SameSite=Lax; Secure;

Write tests for animated gif thumbnail

Improvements to Google Drive client
- [ ] new folder setup (e.g. waiting for user to share folder on drive) needs to survive a server restart (See init.js TODO)
- [ ] slowly resync all connected blogs on server restart
- [ ] It seems like sometimes the first sentence of Google Docs become titles unexpectedly – possibly a mis-identified title tag?
- [ ] make it possible to short-circuit the full folder traversal and immediately begin at a specific file/subfolder
- [ ] to improve sync speed, eventually set up temporary channels to watch google docs for changes – is this faster than polling driveactivity? or work out the fastest way to get fast updates for google docs. Is the move to listen on changes.watch and then setup an optional temporary files.watch channel to stream changes for the length of the channel (don't renew)?
- [ ] add tests with nock
- [ ] Test multiple sites sync in parallel
- [ ] Test multiple Google Drive accounts in parallel
- [ ] On disconnect, convert Google Docs in folder into Markdown and inform the user
  - tell henryirvine about this affecting his site
- [ ] Test drafts
- [ ] Test local templates
- How do we handle two files with same name and same parent? How does our fileId:path hash handle this? Make sure we delete the right file. Will file.title as opposed to file.name give us the deduped version?
  - Bug: move file with deduplicated name from sub folder to other folder
  - download should check for an existing file with same name but different fileId and dedupe before storing the path?
- Handle revoked credentials without tanking server
- Handle removed blog folder without error
- Handle renamed blog folder
- Can the google drive client handle a server restart during setup?
- database.folder should throw ENOENT and EEXIST errors for del, set, move etc.
- Error handling
  - Retry when we get google drive's This service is not available error
  - Handle storage quota errors
  - Handle 429 errors with exponential backoff retry
- Add a way for sync/build to accept a ctime as an option. We can't set this at the operating system level but google drive's API does return a createdTime value and we could use this as the true file's created date, rather than the date the file is made on the server
- `write` should use the best method for large file uploading
- Work out if we can test this using Mocks  

---

Improve design of default error page
- https://kristianhjelle.com/

Make templates/folders build less busy and then re-enable it in app/setup
- consider using git? use local client in smarter way?

Surface Blot client sync errors on dashboard, add email notifications for errors
- surface dropbox out of space error

---

Preserve single line breaks in Word Docs for poetry and [tell Isabel](https://mail.google.com/mail/u/0/#inbox/FMfcgzQcpKhwFRpStFNWhztKGPqQJfsq) and [tell Paul](https://mail.google.com/mail/u/0/#inbox/FMfcgzGxTNzPZwwxJPTDlBBBcnbpPcJJ)

Think about migrating to s3 for blog data storage
- Purge thumbnails and cached images which are no longer in use
- Abstract methods which read, write and readdir the blog folder? static files folder?
- What about pointing the CDN to an s3 bucket then redirecting to upstream for 404?
    http {
        server {
            listen 80;

            # Main location block
            location / {
                # Proxy to the S3 bucket
                set $s3_bucket "bucket.s3.amazonaws.com";
                proxy_pass https://$s3_bucket;

                # Pass the original Host header (required by S3)
                proxy_set_header Host $s3_bucket;

                # Handle S3 redirects properly
                proxy_redirect off;

                # If the response is 404, redirect to the fallback location
                error_page 404 = @fallback;
            }

            # Fallback location if the S3 bucket returns a 404
            location @fallback {
                # Proxy to the fallback upstream
                proxy_pass http://fallback-upstream;

                # Optional: Set a custom Host header for the fallback upstream
                proxy_set_header Host fallback-upstream;
            }
        }
    }
    
For broken embedded images, attempt to resolve based on a shortest path approach, as in, traverse the folder and attempt to find an image with a matching name
- Tell [Ellane](https://mail.google.com/mail/u/0/#inbox/QgrcJHsbgZwttcPcXCvTnzchwRZxCNXhQgq)

Make it possible to embed the HTML output of markdown files using Obsidians embedding syntax: ![[Filename]] 
- Tell [Ellane](https://mail.google.com/mail/u/0/#inbox/QgrcJHsbgZwttcPcXCvTnzchwRZxCNXhQgq)

---

Make it possible to embed audio like so `![Audio]({{{path}}})`

Experiement with injecting script into preview sites which can postMessage to embedding page, sending html2canvas result which can be stored locally for faster loading?

Make it possible to embed video like so `![Video](...)`

Make it possible to embed PDF like so `![Video](...)`

Merge comment and disqus into single comments plugin

Make the 404 page more useful (see Netlify site)

Expose markdown build errors on the dashboard to prevent weird non-update situations where it looks like the sync is stuck

Improvements to search engine:
- Make search use 'AND' instead of 'OR' for multiple terms
- Remove drafts and tell Paul
- Make `search: true` work and tell Paul

Make it possible to link between org mode files with: `[[file:another-test.org][another test]]` and tell [questioners](https://blot.im/questions/2163)

---

Investigate memberful, maybe add a guide to setting it up on a site?

Add simple server-side analytics:
- Tell [Tom](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDNMCtRwGccFxfVKcwlcqfMpg) 
- Tell [John](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHMjqlPTxhSXLNBDCmqXLQHdvX) 
- Tell [Romain](https://mail.google.com/mail/u/0/#inbox/FMfcgxwKjKngCZjbxTNvLQLRMLfzwHxG)

Add simple commenting system
- Tell [Precious](https://mail.google.com/mail/u/0/#inbox/QgrcJHrtwLwTldzhrTKHMtnhwVqMXVzCTqv)
- Tell [Hochan](https://mail.google.com/mail/u/0/#inbox/FMfcgzQcqRBZsPZvGMNQLFVmjBkBzhQW) who is willing to beta test

Add [textbundle support](http://textbundle.org/spec/) and tell [questioner](https://blot.im/questions/1385)
- this will help me understand how best to accomplish multi-file posts

Document image zoom disable feature ?zoom=false and tell [questioner](https://blot.im/questions/2236)

Add way to import directly
- Add micro.blog import to dashboard and tell [Gabriel](https://mail.google.com/mail/u/0/#inbox/FMfcgzGwJRvfgrRhXwqDNDlxbpXmRlbd]
- And recurring import from elsewhere 

Finish site and dashboard
- The site CSS persists in the browser cache
- Make sure folders are zipped when site builds, and delivered through CDN
- Make sure blot resyncs folders with their associated sites when pulled
  - Compute a hash of the folder contents and only resync or re-zip as needed
    - Think about mtimes, metadata as well as file contents
- The top right button 'your sites' should remember the last page of the dashboard you were on so you can switch from docs to dashboard quickly

Windows video + windows finder.css

Rewrite broken link tests

Add pause subscription
- Enable hibernation of blogs 

Add disclaimer to pricing page for old subscribers

Add Generative tree for account page

Add support for INI files and tell [Frank](https://mail.google.com/mail/u/0/#inbox/FMfcgzGwJckFhJhMMwFLzrRTfcSmHbrV)

Add {{#posts-without-:tag}} and [tell steve](https://mail.google.com/mail/u/0/#inbox/FMfcgzGxSRHnwcVVlqvwLFzwRQbsqsnK)

Improvements to website:
- Create material in docs with title 'Turn X into website' where X is:
  - Dropbox, Google Drive, etc.
  - Word Document, Google Doc, etc.
- Document text editors
  https://coteditor.com/
  https://zettelkasten.de/the-archive/
  https://tot.rocks/
  https://desairem.com/wordpress/ufocus/
- Add guide to useful text editors like [this one recommended by Andrew](https://itunes.apple.com/us/app/write-best-note-taking-app/id848311469)
  - do this as a marketing strategy, e.g. target 'blog with microsoft word', 'blog with google docs', 'blog with ia writer' etc... contact the people who make text editors and ask them to link to us?
- Personalize the documentation for logged in customers
- Add [contributor](https://api.github.com/repos/davidmerfield/blot/contributors) / [language](https://api.github.com/repos/davidmerfield/blot/languages) and repo information to source code page using GitHub API.
- Add upload to dashboard
  - Drag and drop 
- Redo demo video

---

Consider switching domain to blot.site
- add support for different user subdomain in dev?
- set up mail
- switch from mailgun to SES over new domain

Add aws cost usage and forecast to daily update email
- https://docs.aws.amazon.com/cli/latest/reference/ce/get-cost-and-usage.html

Make it possible to ask a question without logging in

Improve webloc converter:
- If the bookmark file points to a google doc, can we support google docs even from Dropbox? if the doc is public?

Ensure that overdue PayPal subscription webhooks map to notification emails

Purge old docs CSS and JS from CDN storage cache

Make sure main server can hard restart without issue

Data use minimization:
- Write automated script to archive overdue blogs from disk and db
- Write script to remove unused and unaccessed static files from within blog folders
  - we'll also need to purge the cache of the transformer module for the file

When a post is deleted, we should remove everything except the created time?

Create a queue for purging cache, group requests together to prevent stampede

Prevent overzealous purging of cache for syncs in which the folder does not change

Add WebDav support

Improve paypal integration:
- [ ] Get create new blog working
  - [ ] Add way to modify subscription quantity for paypal users
- [ ] Create new router for paypal subscription settings
- [ ] Test subscription with real paypal account
  - [ ] Test new blog creation
  - [ ] Test new blog deletion
  - [ ] Test switch to annual billing
  - [ ] Test account deletion
- [ ] Add subscription pause
- [ ] Make it possible to add paypal as a payment method for existing stripe users
- [ ] Verify signature integrity of paypal webhooks
- [ ] Use PayPal buttons api to modify subscription properties
- [ ] Get account page working
  - [ ] Add way to cancel subscription from dashboard
  - [ ] Add way to delete account from dashboard
- [ ] Update scheduleEmailNotification for paypal customers

Can I use proxy_store instead of openrestycache?

Make {{active}} strip the domain from the link [before checking](https://github.com/davidmerfield/Blot/blob/master/app/blog/render/retrieve/active.js#L22)? Or automatically strip the domain from internal links on Blot's dashboard?

When a folder has lots of elements, trim the list of files on the dashboard, at least on the index page

Store path -> md5 hash on sync
- Use to auto version links to files in your folder so they can be cached

Investigate videos instead of gifs for thumbnails

Eventually configure cloud watch reboot sequence then test it

---

Investigate if we can rewrite git client so we don't need to store double the data - right now we have 48GB duped.

Adjust auto titles of 'screenshot at 12:22pm' and make sure the date parser can handle them

Adjust title generator so h2 titles within the file dont become the title of the post – this is helpful for obsidian

---

Improve image posts
- Add support for large image tiling and zooming with photoswipe

---

Server improvements:
- Copy the cron tab into the new server setup script
- Add more stringent checks to scripts which mount instance storage and external volumes
- Get blot proxy communicating with node process via unix socket
- Understand why the server gets so slow when we switch from SSD ebs to HDD ebs
- it would be ideal to use HDD for bulk of blog storage, and take advantage of the local SSD for high performance operations
  - Investigate use of aws s3 sync for backing up ebs volume rather than snapshots
- Test reboot for all servers 

Add support for proxying particular analytics files and tell [questioner](https://blot.im/questions/2025)

One bad latex equation should not [tank the build process for the whole post](https://blot.im/questions/2037)

Add support for activitypub and tell
- [Tim](https://mail.google.com/mail/u/0/#inbox/FMfcgzGtwCvckCnTJHxSFsQDZnkTPBzp)
- [Questioner](https://blot.im/questions/2543)
- [Rhys](https://mail.google.com/mail/u/0/#inbox/FMfcgzQcqRDsGrLZFghZhShLQHNZdchS)

Work out why we get a 'Zombie process' notification email every morning at 9:05am – now 8:05am it seems the process hangs

Wikilinks should have a class property of 'wikilink' rather than a title attribute and tell [questioner](https://blot.im/questions/39)

---

Preserve file name for SEO purposes when uploading to image cache CDN and tell [Jean](https://mail.google.com/mail/u/0/#inbox/FMfcgzGsmNWvwwvzVGZnPFKnHnkbBWxD)

Add a property to entries which lets you list all the images in a post so [Jean](https://mail.google.com/mail/u/0/#inbox/FMfcgzGtwgpcHJMnwFNXtNHWHMlZFFlb)
 can add them to his sitemap

Add lazy loading option to image settings and tell [questioner](https://blot.im/questions/1806)

---

Improve CI testing
- [ ] Add spell checking test
- [ ] Write browser based integration tests for core functionality
- [ ] how can we test the 'reload-server' script?
- [ ] how can we test the 'scheduler' functions? we ran into error where it was running twice

Methods to improve server performance
- consider expanding the replication of the perma_cache across more regions
- consider switching to more expensive CDN type (i.e. not volume)
- switch to more expensive EBS for disk of server

---

Add support for paying with crypto, BTC ETH
- Consider https://github.com/btcpayserver https://github.com/btcpayserver/node-btcpay
- Tell [Chaz](https://mail.google.com/mail/u/0/#sent/165b726aa900158a) 
- Tell [Anita](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLsSWMtCTdmrbscFCFLggctmxH)
- Tell [Arc](https://mail.google.com/mail/u/0/#inbox/FMfcgzGtwqJkLxGTKPXhZPSWVjJqQbjs)
- Tell [Dmitriy](https://mail.google.com/mail/u/0/#inbox/FMfcgzGxSlPTwlRkJxQfntCdmbjFsrZC)

Improve Are.na importer so it handles descriptions + also other file types (e.g. PDF, text) and tell [Marco](https://mail.google.com/mail/u/0/#inbox/QgrcJHsBvDqvbgfkRJfBlwLBwlDHDncxVnl)

Improvements to server
- [ ] move development cdn onto its own host to better simular cross-domain issues
- [ ] test maintenance and redirector on dashboard
- [ ] restrict post to /dashboard route so we can tune nginx logic?
- [ ] tune performance of express-mustache in production and development
- [ ] add optional HTML/JS/CSS minification to express-disk-cache
- [ ] Test overdue subscription re-start
- [ ] Create blog > Dropbox > Create blog > Dropbox failed to set up properly
- [ ] Prevent GET request to log in page from setting `connect.sid` cookie
  - [ ] or otherwise work out how to try and cache everything at nginx
  - [ ] log in route should clear 'logged_in_to_blot' cookie if not logged in
- [ ] Use [Lory](http://loryjs.github.io/lory/) to add a slider to the homepage

Improvements to sync/reset scripts:
- [ ] reset should produce a report which I get email
- [ ] Resync should produce a report which I get via email
- [ ] dropbox reset TO BLOT should handle removed folder
- [ ] dropbox reset FROM BLOT should handle removed folder
- [ ] dropbox reset TO BLOT should handle revoked token
- [ ] dropbox reset FROM BLOT should handle revoked token
- [ ] make dropbox reset FROM abortable
- [ ] make dropbox reset TO abortable

Improvements to Dropbox client:
- [ ] Determine if we can hack our way to determining the file upload date on Dropbox using their API?
- [ ] Parallelize build/download a little more, so posts appear when many files are dropped into folder?
- [ ] Efficiently handle Dropbox file renames with internal hash of fileIDs
- [ ] surface errors during setup on dashboard
   - [ ] surface sync issues with Dropbox client on the homepage of dashboard
   - [ ] How do we make errors sticky? To make sure users click through to clients page to re-connect to Dropbox, etc...
- [ ] run reset-to-blot when sync fails / errors
- [ ] ensure that when a process dies, any blogs syncing will be reset-to-blot
- [ ] ensure that when a process dies, any blogs setting up db client will be re-attempted
- [ ] reconnecting with the same account and same permissions should not create a new folder for `full_access=true`
- [ ] make full_folder use the old app folder directory – is there a way to disconnect it from the Blot app? otherwise add a big warning to prevent confusion about where the new folder is when transitioning permissions
- [ ] handle the download of large files gracefully too
- [ ] consider adding back in download/upload stream, but add a check to see if the download is stuck then fall back to other method?
- [ ] add a check for folder storage before doing mass upload
- [ ] handle folder full error appropriately
- [ ] handle a sync lock failure on second blog when migrating an app folder
- [ ] check content hash for upload possible

---

Add profile photo cropping/masking tool
- include circle, oval, and other shapes (e.g. https://www.jayceeday.com)

Add explanation for which files are causing which menu links 

Add export button to overdue subscription page

Add way to restore a blog from export

Add way to escape commas in tags and [tell questioner](https://blot.im/questions/1431)
  
---

Improvements to importer
- Can we offload an import into a resource constrained child process?
- Can we queue up imports and process them one at a time?
- Add interface to move import into folder directly
- Add scheduled imports on regular basis into folder directly
- Add nice import step under 'Services' and as part of sign up
- Improve Ghost importer and tell [Vin](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBWSwbGRtFTnJCPCXzVHntQPtC)
- Create importer script for [John's posts from flickr](https://mail.google.com/mail/u/0/#inbox/166da622325d19e7)
- Create importer script for tumblr text files and tell [Sawyer](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVMhRNdQhfDwlXsqqFNgmKfTk)
- Create importer script for Weebly and tell [David](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBTjzpgHQZMJSsvjktggRFNpDw)
- Map excerpt metadata to summary for Jekyll converter importer
- Look into how Hexo has written imports for [blogger](https://github.com/hexojs/hexo-migrator-blogger), [joomla](https://github.com/welksonramos/hexo-migrator-joomla), [rss](https://github.com/hexojs/hexo-migrator-rss), [wordpress](https://github.com/hexojs/hexo-migrator-wordpress).
- Add an importer for Twitter and sell [Sawyer](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVMhRNdQhfDwlXsqqFNgmKfTk)

Add 'confirm email address' flow to prevent typos in emails

Add simple form endpoint, could be used for contact forms

Add theme with photoswipe and use sharp's tile generation feature along with 

Add [hot reload for preview subdomains](https://blot.im/questions/832)

Add way to set the slug-part of a URL for a post and tell [George](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLsdBjKHPdsRXJBGSbxpQQCbCN) and follow up for [post in Questions](https://blot.im/questions/23) and tell [Jarrod](https://mail.google.com/mail/u/0/#inbox/FMfcgzGqQcpsRhzFwxVGFJLLTRsFFGKj)


---

Can Blot blogs be federated? Respond to [Nigel](https://mail.google.com/mail/u/0/#inbox/FMfcgzGrbRWfcBdwKdRZxsBKjKDwrkTp) once I do some research on this

Rebuild folder sites and tell [Michael](https://mail.google.com/mail/u/0/?zx=j8rkxjpin0du#inbox/FMfcgzGqRQBnhXzfWsqFZhBCGVMMzDGX) that the broken image link is fixed

Follow conventional delimiters for [KateX](https://mail.google.com/mail/u/0/?zx=j8rkxjpin0du#inbox/FMfcgzGrbHmWxcrVtbhnzHVnCtfLZhxH)

---

Support larger files on DB client and tell [Marco](https://mail.google.com/mail/u/0/#inbox/FMfcgzGqQmWjKnmPrwKSXMdZNmlqmtss)

Add support for new formats:
- jupyter notebooks (via pandoc) and tell [questioner](https://blot.im/questions/2297)

---

Explain that the git client uses the master branch and repos from github will use main in the docs and on the dashboard then tell [N](https://mail.google.com/mail/u/0/#inbox/FMfcgzGqPzKcnQKsQQNkzcRpvCWpWKTr)

Send out cancellation confirmation emails with option to give feedback
- auto-refund people who immediately close their account after signing up

Add tag to iterate over all images in a folder and tell [Laurel](https://mail.google.com/mail/u/0/#inbox/FMfcgzGmvBwZtktzGVFtcfDWbGZKhsfh)

---

Improve backlink's tolerance
- Add support for full qualified URLs in the backlinks list for each entry. For example, if your blog is example.com, the following link will not appear as an internal link: [Foo](https://example.com/foo) because build/prepare/internalLinks is not aware of the blog domain/handle 
  - Tell [Eli](https://mail.google.com/mail/u/0/#inbox/FMfcgzGlkFlwSwXGrFZwvSKdHKvcxplV)
- Add support for internal links without a leading slash
  - Tell Laurel

Add support for 2FA (Two factor authentication) then tell [Luke](https://mail.google.com/mail/u/0/#inbox/163993b0f8499ab3), [Max](https://mail.google.com/mail/u/0/#inbox/1641e9bd104c5b77), [Chaz](https://mail.google.com/mail/u/0/#inbox/165b726aa900158a), [Prathamesh](https://mail.google.com/mail/u/0/#inbox/FMfcgzGqQmWhhpCVSlbhdvlvWdmdtJWQ) and [Tom](https://mail.google.com/mail/u/0/#inbox/FMfcgxwDqnpZncgBDbDskMZdPMXkgGCN).

Add support for SSO then tell [Prathamesh](https://mail.google.com/mail/u/0/#inbox/FMfcgzGqQmWhhpCVSlbhdvlvWdmdtJWQ)

---

Improvements to dashboard:
- Improve clients
  - cache sync validity and display checkmark on dashboard
  - surface errors for clients on dashboard index
  - add a change button next to the dropbox folder selected on the dropbox client where possible
  - add blocking process to dropbox connection when writing folder contents
  - ensure the app permission access_token is destroyed when switching to full-folder and vice versa
  - add a folder chooser during full-folder setup
  - ensure you can move the folder in full-folder permission mode

Move citations out of `{{{html}}}` and tell [questioner](https://blot.im/questions/298) and [Mikka](https://mail.google.com/mail/u/0/#inbox/FMfcgzGlkPcprJZlTSFbTGlqSPJcfWJJ)

Add [OneDrive](https://onedrive.com) client
- Tell [Nenad](https://mail.google.com/mail/u/0/#inbox/FMfcgzGxSHlNTlFCKwNsPbZPxRgbbVkB)
- Tell [John](https://mail.google.com/mail/u/0/#inbox/FMfcgzGkbDVrfBwGjnVDdtXkNxKpwjfq) 
- Tell [Shantesh](https://mail.google.com/mail/u/0/#inbox/166df93b38231ec9)
- Tell [Nathan](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVgvsdfSnqBppQrXLTVjZBBzp)
- Tell [ekskog](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVDBmdRXFWTFLqxKgxVkdWnWL)  
- Tell [John](https://twitter.com/seismonerd/status/1096862510404128768)  
- Tell [Simon](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChcrhfQNXvkFkdtKntXlhjNfm)  
- Tell [Andrew](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLtGjKFlzJFfRcVQdWdMBkZzdK)  
- Tell [Naveen](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHMZJvNGJxTXXcnsmXDqdkNnNq)  
- Tell [Emad](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHNCtzTpZsgXXjWsrTGsTTZLjx)  
- Tell [John](https://mail.google.com/mail/u/0/#inbox/FMfcgxwKjnVGxPWrFPKJRqtlnbkHfwXt)
- If OneDrive for Business is supported tell [Josh](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVqWwRgxrwLRzrNscfJtllhXz)

Add Apple Notes]client
- Tell [Håvard](https://mail.google.com/mail/u/0/#inbox/FMfcgzQbfVFlPhLBJNRsqHZJzfDTnzTg)

---

Re-order blog engine routes such that pages/entries are evauluated first, making it possible to set up custom redirects and tell [Marco](https://mail.google.com/mail/u/0/#inbox/FMfcgzGllCcNbxjDTdZzRCcNgmnJjXWM)

---

Write new converters to turn files into posts
- Add AVIF image post support and tell [Simon](https://mail.google.com/mail/u/0/#inbox/FMfcgzGlkFqWwhwwQgrrlwKtctkTgRXx)
- Add support for [Jupyter Notebook .ipynb](https://predictablynoisy.com/posts/2019/2019-11-11-ipynb_pandoc/#ipynb-to-html) using Pandoc and tell [Arnab](https://mail.google.com/mail/u/0/#inbox/FMfcgzGmtNdkGQxbMVblqjvkHwSMTBbW)
- Add support for .doc using [libreoffice](https://www.npmjs.com/package/libreoffice-convert) and tell [Kyle](https://mail.google.com/mail/u/0/#inbox/FMfcgxwKkHZVgwCNwsdlhdzCggRtsRhN)
- Video posts (.mp4) - add way to opt-in to these
- Add support for .tiff images 
- OPML files and tell [John](https://mail.google.com/mail/u/0/#inbox/1659bac084c3e404)
- Audio posts (.mp3 for now?) and tell [Kevin](https://mail.google.com/mail/u/0/#inbox/FMfcgxvzLhcqVldHMCFpTWDmfrRHfwpg) - add way to opt-in

Write new clients to sync blog folders 
- [rsync]()
  - Tell [Harry](https://mail.google.com/mail/u/0/#inbox/FMfcgzGxRdvrcfMwTVnvGrHKgvJmfwxM)
- [SFTP](https://www.npmjs.com/package/ftpd) 
  - Tell [Coraline](https://mail.google.com/mail/u/0/#inbox/FMfcgzGllCmcFflWmXcCdVzTJztDTwXx)
  - Tell [Calvin](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChclvkfHMWfnqGdWkQnzMdklW) 
  - Tell [Fabrice](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHNCspWMdnbCdzfHGwBrSKPBSC)
- [NextCloud](https://nextcloud.com/) 
  - Tell [Vincent](https://mail.google.com/mail/u/0/#inbox/FMfcgzGpHHVZggXQRzJKNTrJHRxLdLjt)
  - Tell [Coraline](https://mail.google.com/mail/u/0/#inbox/FMfcgzGllCmcFflWmXcCdVzTJztDTwXx)
  - Tell [Andrew](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChJgWDpnsGBCXsCwkxRZnXMph) 
  - Tell [Mike](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHMGDWmSXxbJkvjZbtvdQtNNGZ)
- [Box](https://box.com) 
  - Tell [Eric](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHMZRzCcPkNppMpSbBzNRKFSNs)
- [Syncthing](https://www.npmjs.com/package/node-syncthing) 
  - Tell [Jason](https://mail.google.com/mail/u/0/#inbox/FMfcgxwCgpVWzZTVxccmWLmnPBmDFjvV)
- [Github](https://github.com)
  - Tell [John](https://mail.google.com/mail/u/0/#inbox/FMfcgzGmvBnVvqHdJXLgDhrtChCqdMQX)  
- [Jumpshare](https://jumpshare.com)
  - Tell [Ömer](https://mail.google.com/mail/u/0/#search/omer/FMfcgzGxRnkSFxdSmGLmNQpXjXfBSChT)
- pCloud 
  - Tell [Omaid](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDDjqhCxHhJqbGlGNZsfkWWQf)
  - Tell [Anders](https://mail.google.com/mail/u/0/#inbox/FMfcgxwKkRFxsDShhsHGNcdRqwHFMmJM) 
  - Tell [Tim](https://mail.google.com/mail/u/0/#inbox/FMfcgzGlkZCjPBbnKtcXvrMQnxSwHBzk)
  - Tell [JMN](https://mail.google.com/mail/u/0/#inbox/FMfcgzGpGwtXQsVFFTcnTJdBTNdkMmXv)
  - Tell [Rodney](https://mail.google.com/mail/u/0/#inbox/FMfcgzQbgcKkJLVFLvfBwTcRdlrzwHXr)
- Dropmark
  - Tell [Rado](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDDjrKSQVTXqvgFRGrhMSFvrR)
- Proton Drive
  - Tell [Ted](https://mail.google.com/mail/u/0/#search/proton+drive/FMfcgzQVxlMmFdqvrMHgfsFRfRDHLFTh)
  - Tell [Francois](https://mail.google.com/mail/u/0/#inbox/FMfcgzQZVJvWMbgrxGpRlLvKXsSPTtDr)

---

Improvements to backup system
- Add hourly local redis rdb dumps to /cache
- Test maintenance mode
- Add script to roll back into hourly local db dumps and remote backups

Begin collecting proper measurements for page-rendering speed on the server

Improvements to teaser generator
- Improve estimate of teaser length
- Remove trailing non-text elements (like <hr>)
- Add {{small}} and {{long}} versions of teaser?
- Internal links (e.g. #section) in {{{teaser}}} should be resolved against the entry's permalink.
- Add hasBreakpoint property to entry to allow greater control over display of {{{teaser}}} and tell [Pratik](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBTsfMTHqWMQFmprMcjNpdBQzp)
- Make it [possible for users to select length of teasers](https://blot.im/questions/823) and [Leo](https://mail.google.com/mail/u/0/#inbox/FMfcgzGqQJdjwTLkHkRZvZTQvfSzSFTq)

Make it possible to [disable draft preview files](https://blot.im/questions/3193)

Performance improvements
- Consider switching redis client, perhaps to ioredis?
- Use a docker image to speed up test suite: https://github.com/davidmerfield/Blot/pull/463
- Faster server, with SSL termination across CDN
- set up 'cdn.blot.im' as cloudfront distribution endpoint?
- Streamline and cache loading of data on dashboard
- Ensure node.js server has one process per CPU
- Detect CPU intensive functions in node.js process
- Use the [--trace-sync-io command-line flag](https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production) to determine if Blot is using any sync methods inappropriately
- Can we keep the pandoc child_process running and pipe stuff in and out for speed? Measure before after to ensure this helps
- Add request level timeouts to prevent server swamping
  - ensure to remove the timeout from the SSE streaming routes (drafts, sync status on dashboard)
  - read this guide: http://expressjs.com/en/resources/middleware/timeout.html
  - it seems we also need to cancel the resources involved in responding to the request (i.e. disk io, db calls) for this to be really useful
  - Add a timeout of 15 seconds for building posts.

Server changes
- Write useful benchmark tool for Blot
- Work out how to detect stray build processes. There were a bunch of zombies consuming memory on Blot's server. Work out how to kill them safely
- Experiment with different EBS types, perhaps try to use ephemeral disk more since lower latency?
- Take full advantage of attached SSD
  - use rsync/inotify to synchronize 'source of truth' EBS disk with the local SSD cache then modify NGINX to check the synced folder on the /cache disk
  - on boot we would gently copy across all /blogs folders and the /static directory in background task

Add [line numbers](https://github.com/wcoder/highlightjs-line-numbers.js/) to highlight.js hljs code tags

Convert [Vitepress](https://vitepress.vuejs.org/) to Blot and tell [Nicolas](https://mail.google.com/mail/u/0/#inbox/FMfcgzGmtNldkFnLGgZVNfqLcvBjVxWW)

Expose log files on blog's dashboard and tell [Roman](https://mail.google.com/mail/u/0/#inbox/FMfcgzGtwDDXlpTvjNdJwmjXTCzGTqbW), [Sönke](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLtsxjSMlVmNRFGJJxkpsVFNvg) and [questioner](https://blot.im/questions/136) and [John](https://mail.google.com/mail/u/0/#inbox/FMfcgzGmvBnVvqHdJXLgDhrtChCqdMQX)

Add end-to-end tests for brochure site to test sign up flow (use Playwright? Phantom? Chrome headless)

Improve wikilinks lookup algorithm:
- [ ] Add support for 'shortest path where possible' on Obsidian
  - [ ] search current directory for filename
  - [ ] search subdirectories for filename
  - [ ] search parent directories for filename
- [ ] Add support for 'absolute path' on Obsidian when the vault is a sub directory of your blog folder
  - [ ] How best to accomplish this?
- [ ] Add support for deleted files (e.g. [[Target]] -> target.txt still works if target.txt is renamed to foo.txt)
Support Obsidian-style media embedding and tell [questioners](https://blot.im/questions/746)

---

Fetch dimensions of images even if optimize and cache is disable, so that image zoom can work. Tell [Joshua](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLsmhMtGvPcwxlSHSSTFVpJVbd)

Add action to lint code with jshint and eslint
  - any other static code analysis tools?
  - separate code to check for broken links, run in parallel
  
Improvements to metadata extractor:
- Improve date parser to use time from file creation date if it's within the same day as the date specified in metadata and follow up with [Nicolas](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLsShbhKRcvhWJlKRPHPctMnWM)
- Adjust summary generator such that a subtitle is used for summary text (i.e. an h2 directly following an h1) We still want to prevent the scenario in which a later h2 becomes the summary, though. Notify [Jessica and rebuild Jessica's site](https://mail.google.com/mail/u/0/#inbox/KtbxLwghhxtxrtdGHFqBRMcDGkGWtxvSdq)
- Add support for entry property with escaped double quotes, tell [Jay](https://mail.google.com/mail/u/0/#inbox/15e396dbd8350972)

Improve questions section of site, in approximate order of importance:
  - Add way to mass-rename tags
  - Add display aliases for tags e.g. how -> How to use Blot, etc.
  - Store version history of the question and answer edits
  - give the 'ask' and 'answer' textarea inputs the full functionality of the GitHub issue/PR comment inputs (i.e. code snippets / preview / copy/paste screenshots from clipboard)
  - email notifications (There's an existing system in place for sending emails in app/helper/email)  
  - upvoting for topics and upvote-based ranking on the topic index
  - show vote count and answer count next to each question on index
  - 'run code snippet' feature / similar to trinkets.io

---

Adjust the chargeForRemaining function in create-blog such that the balance is added or deducted from the proration charge.

Rewrite transformer (in app/helper/transformer)
- Speak HTTP properly, respect backoffs, use/send eTags
- Share information across blogs?
- Improve transformer so it checks a file's MTIME against a stored value before rehashing the file?
- Adjust interface to accept a number of directories. Make it 'unaware' of blog IDs?
- Add method which accepts a path or URL and flushes what is stored for it, update the rebuild entry script
- Cache errors. When a post contains multiple identical links to images that timeout/404, the thumbnail generator should only make 1 attempt to fetch them. Right now we have a post that is filled with identical broken image links (in this case to a spacer.gif) can suck up the build process for hours. 

Add a 'page link format' option to the dashboard – the link format now only applies to entries. Tell [Mike](https://mail.google.com/mail/u/0/#inbox/FMfcgxwKkbjLjgTZLQqMFFMzBBpzMZTg)

Generate proper favicons from uploaded avatars (to prevent streched favicons when non-square avatars are uploaded)

Improvements to server infrastructure
- Work out way to recover from expired cert in the cache. To reproduce, consider a member who signed up, connected example.com, then moved the domain to another service. The attempt to renew the cert for example.com will fail. When the customer re-registers with Blot, for some reason open-resty-auto-ssl will serve an old certificate. I followed these steps to [reset](https://github.com/GUI/lua-resty-auto-ssl/issues/42) but we should automate this
- Create DMARC record for Blot https://en.wikipedia.org/wiki/DomainKeys_Identified_Mail https://docs.aws.amazon.com/ses/latest/DeveloperGuide/dmarc.html

Add support for posts generated from Excel files, would generate a table. Use [this library](https://github.com/joshboyan/excel-to-html-table)?

Improvements to entry builder
- Improve the automatic title generated for screenshots with default MacOs filename from 'at 14:40pm'
- Generate a list of titles which you could use to generate a table of contents and tell [Zach](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDNNMjbjsSKltGRLDsqXfbMhN)
- Use time draft was moved into blog folder for entry created/publish date, rather than the time the draft file itself was created. Tell [Kerim](https://mail.google.com/mail/u/0/#inbox/FMfcgxwDrHtwmLGkWLvLfklMwRRqDpTk) and [Shibel](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDWsqhHZnPjfgRqFhpdNGZVKn)
- Parse Word Document subtitles as h2 and tell [Matt](https://mail.google.com/mail/u/0/#sent/FMfcgxwDrlfrjDMsDlkLHNsnbtmXQtDw)
- Add way to filter entries by post type (e.g. photo) and tell [Justin](https://twitter.com/juter/status/1079767534231011330).
- If entries share publish date, sort them by blot creation date

Improvements to dashboard
- Add error messages on overdue subscription payment form
- Use \<select\> optgroup on timezone select dropdown to subdivide zones by current time, and steal the presentation format used by basecamp.
- Add a broken link checker
- Indicate that some posts' permalink will not change (if metadata) on the dashboard when setting the blog's permalink format. Tell Chet.
- Dumb quotes are still smartified, even without typeset enabled, possibly by pandoc?
- Undo option for form changes
- Add transactional emails notifying customer of changes to their email or password?
- When a customer pastes the whole tracking script into the preferences page on the dashboard, strip out everything except the ID which we need... perhaps create a page explaining what
is happening before doing this.
- Handle noscript on dashboard / signup gracefully (remove all dashboard js?)
- Allow customers who are restarting an account with multiple blogs to disable some before restarting.

---

Add password protection for blogs then tell [Ed](https://mail.google.com/mail/u/0/#inbox/164edd9d46596ec7), [this person](https://mail.google.com/mail/u/0/#inbox/155f01452a3f7231), [this person](https://mail.google.com/mail/u/0/#inbox/1645b6e48dc13281), and [Will](https://mail.google.com/mail/u/0/#inbox/FMfcgzGlkXsdBcCssKznzgvJQPDQpKlh), and [Modomiro](https://twitter.com/modomiro/status/1053345173743329281) and [Julian](https://mail.google.com/mail/u/0/#inbox/FMfcgxwCgpVWqGMHszwgxZRxNTNXRTlX) and [Raph](https://mail.google.com/mail/u/0/#inbox/FMfcgxwCgzFTCKQXQmQqdNMdjMfDFkMW) and [Jeremy](https://mail.google.com/mail/u/0/#inbox/FMfcgzGmvTvDjVMLQQmxvnZHBnnxdRpk) and [Tara](https://mail.google.com/mail/u/0/#sent/FMfcgxwChJlBCNMWSFhSctjMkBcKdpsq) and [Phil](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChSHbCCgQqZqqKQftJbwHRkss) and [Florian](https://mail.google.com/mail/u/0/#inbox/FMfcgxwDrlSVCrQSVMBlFwQcNcGfZLzn) and Roy's friend Tim and [Kaleb](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDNWPljXXlwQVtswFCCLGFCQV) and [Lotus](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDNQfSzPBHtqRCQqCDjMTZLCQ) and [Khaled](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHMGBFrctdVXhksCvqXXVPfDWR) and [Noel](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHNMdwcwMqfVjmJPHKBMxzQChR) and [Franz](https://mail.google.com/mail/u/0/#inbox/FMfcgxwJXVMfwXfsWswWjvrpVKrPqpDt) and [Justin](https://mail.google.com/mail/u/0/#inbox/FMfcgxwKjBRFjtljCQvlhsfXsSxrCKdJ) and [Kyle](https://mail.google.com/mail/u/0/#inbox/FMfcgxwKkHZVgwCNwsdlhdzCggRtsRhN) and [Devan](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLsJznDjRgbzwPmChbNQdqfnfq) and [John](https://mail.google.com/mail/u/0/?zx=bjx0x027sgct#inbox/FMfcgzGqQvvRpSrnkRNsrhddkzBhMsvf) and [Anita](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLsSWMtCTdmrbscFCFLggctmxH) and [Emerald](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLtkXpvTkdGzkFCLtmmLTlvrJL) and [Ben](https://mail.google.com/mail/u/0/#inbox/FMfcgzGmvBmLLlZwPLbdJdXKQXrwrJnL) and [Giuseppe](https://mail.google.com/mail/u/0/#inbox/FMfcgzGmvBnTWqHgFgdwBvcCDcmzLXGV) and [Annie](https://mail.google.com/mail/u/0/?zx=j8rkxjpin0du#inbox/FMfcgzGqRQCwsXBNDJqLjDnJrjGmctdJ) and [Jan](https://mail.google.com/mail/u/0/?zx=j8rkxjpin0du#inbox/FMfcgzGqRPzfVlDPLLjkqCfnBWqmVqKg)
- think about how to add simple password (just a string) protection to sites. 
- we need to consider both the node.js app (app/index) and the openresty reverse proxy (config/openresty), especially the proxy caching behaviour for sites. 
- perhaps we'll need to handle sessions for sites with password protection in some way at the open resty level? or just use some response header from upstream to always bypass the proxy cache? or some cookie? we don't want to add any extra work in openresty for sites without passwords. perhaps sites with passwords return responses with a header that prevents any proxy caching from taking place?
- anyway, it would involve:
- updating the blog model (password: string).
- adding a simple on/off input button to the dashboard, possibly under a new section. 
- creating a password form view common to all sites, or able to be overwritten (password.html in a template perhaps).

Add raw-link -> open graph cards/embed function, which would fetch the title, description and thumbnail for a link using <meta> tags. Tell [Robert](https://mail.google.com/mail/u/0/#inbox/FMfcgzGlksJFbBlWtzMHgcxcdBRBhQSJ)

---

Improve the markdown converter:
- Extend the Markdown converted to add support for Ulysses highlighting and iAWriter highlighting syntax, using the [example files provided by Marco](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLsKFQGTxDTnxNddZQxjsLZJGb). Tell [Marco](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLsKFQGTxDTnxNddZQxjsLZJGb)

---

Add support for paths to static files with a trailing slash then tell [Sean](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGBwbZsfsWKHCGcbzXXSPhQWXx)

Add copy button to code snippets in \<pre\> tags and tell [Atif](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGCGxBVcrtzqmXGBtpLTBBjrQf)

Add support for Ulysses .ulz file format and tell [Nash](https://mail.google.com/mail/u/0/#inbox/FMfcgxwDqxRmfFfLfBdcrrZBDxXPTtTj)

Add support for Ulysses image syntax and tell [Konstantin](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHMsRmxKrQzmjmcxnBTqQKHvzj)

Finish template translation offers
- [Anders Norén](https://www.andersnoren.se/teman/)
- [Radek Kozieł](https://github.com/panr)
- Port [Jane hugo theme](https://github.com/xianmin/hugo-theme-jane) to Blot and tell Jack and Josh on micro.blog
- [Ghostwriter](https://themes.gohugo.io/ghostwriter/) and tell [Simon](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLsScxfcHPpszsvCwTxqwbczTm)
- Work on [Tim](https://mail.google.com/mail/u/0/#inbox/QgrcJHsNmtgTlZpGFBGxzhPSDHVNczfwqXL)'s template 
- Translate [this theme](https://github.com/huangyz0918/moving) to Blot and tell [Naveen](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChJZlmGfwNKCPLPMbkRHJSjNs)
- Translate [Ana's](https://mail.google.com/mail/u/0/#inbox/FMfcgxwDqTgjDcQwDdcmTkgjjKTdQhQV) designs to Blot
- Translate [2019](https://themes.gohugo.io/twentynineteen-hugo/) to Blot and tell [Gabriel](https://mail.google.com/mail/u/0/#inbox/FMfcgxwDrHqTkZhqhrFllhNGrbzwXqzg)
- Translate [Paul's template into Blot](https://blot-im.slack.com/messages/DJ39G5WQ0/)
- Add a bootswatch template and [tell Michael](https://mail.google.com/mail/u/0/#inbox/FMfcgzGqRQBnhffbhgdVXCMpzGpbJgbW)
- Port the jekyll template [Neocactus](https://github.com/mmarfil/neocactus/) to Blot and document the process
  then tell [Robert](https://mail.google.com/mail/u/0/#inbox/16288ce117d980e4)

Add way to filter archives page by year or month and tell [Chad](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChmTsrnBLkSXfNXKDtXdNFjfk)

Adjust length of slug to use as few words as possible until collision and tell [Chet](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGBmtwFVcGnqXNNxPNqdbzlWhL)

--- 

Improve scheduler
- Adds a command to restore database from backup.

Remove dependence on AWS
- Adds offsite (i.e. non AWS backups) backups
- Write out plan to move off AWS
  - DNS
  - EC2
  - S3 for backups
  - Cloudfront for CDN
  - backup blogs folder + db somewhere offsite at least once per week

Metadata parser
- Make custom metadata more strict, follow up with Chris](https://mail.google.com/mail/u/0/#inbox/FMfcgxwCgpdRvrccbzfckkZRtPXHzqjs)
- Add support for [Pelican-style metadata](http://docs.getpelican.com/en/stable/content.html) in HTML posts using <meta name="date" content="2012-07-09 22:28" />
- Removing Date metadata from a post should reset its date to the file's creation date. Currently nothing changes.
- Fall back to file name before first sentence when generating title metadata and tell [Rob](https://mail.google.com/mail/u/0/#inbox/FMfcgxwCgpVWgqcnbZjCdSXbjrBlLkFC)
- Add support for setting the index of an item in the menu to metadata and tell [Silvio](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChJfNfLljXGvbjpNwDBFWXDWR)

Implement hidden link section on Menu page under profile settings. Default links not on the menu would appear there, making it easy to restore them in future. Tell [Josh](https://mail.google.com/mail/u/0/#inbox/FMfcgxwCgVTbfgnTVvCjfMGzWDjvjfML)

Add new variable for last-build-time for a blog, and use this for <lastBuildDate> in the sites' RSS feeds. Tell [Shawn](https://twitter.com/soypunk)

Redirect old draft URL to live published post and tell [Shibel](https://mail.google.com/mail/u/0/#inbox/FMfcgxwCggCNxgsmCtmRTSkVrDlMJqSH)

Improve 404 log page on Dashboard
- Add button to clear 404 log and tell [Jamie](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVDLzTVpVZHfgwRgcmtGXFHXx)
- Add frequency indicator for each route 404 log and tell [Jamie](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVDLzTVpVZHfgwRgcmtGXFHXx)
- Add filtering by date to 404 log and [tell this person](https://mail.google.com/mail/u/0/#inbox/1566e52d170f29ca)

Add support for nesting multiple layout tags e.g. "{<>} {||} Y" and tell [Marius](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVqNqbsQJjcrTXRcsFxHVPzDq)

Improvements to Git client
- Make it possible to connect github repo via their API and tell [reg](https://mail.google.com/mail/u/0/#inbox/FMfcgzQXKhPKRfSsfGpXCdcxtFBhdKDt)
- Add support for LFS and tell [Jamie](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVMcpnxGHqnxJHNdbMBSrglzg)
- Remove git folder when switching to Dropbox client and tell [Jamie](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDDqlwPCNcJrLDqprtcKWXFTn)
- Backdate existing commits (perhaps set file ctime using info from git log?) This would sidestep the frustration experienced by [Gavin](https://mail.google.com/mail/u/0/#inbox/1669a8e621f9ef37) when he imported an existing repository.
- Extend sync lock during long syncs
- Write test to simulate process dying and restarting mid-pull. Does the client recover? What happens if a pull fails midway? Does git recover?
- Write tests for a series of random client operations (pull, add, push, move, reset, delete) that can be seeded and reliably re-run in the case of failure.
- Move to neat promise chain api when 2.0 comes out
* Test that client must keep sending new entries and deleted entries when it recieved an error from entry.build otherwise you get ghost posts...
- send nice error message with instructions for 413 request too large: "git reset HEAD^" etc...
- Thoroughly document:
- Tidy up tests and reduce size and runtime
- This client should acquire a lock on the blog's folder before doing stuff to it more generally, especially during initialization etc...
- what happens if customer changes their handle? will pushing break?
  - I want them to be able to keep using their old one *until* someone else claims it, then I want 401 unauthorized, please reauthenticate with new username... but the remote path will be wrong?
- Rate limit authentication route?

Improvements to Dropbox client
- Handle file renames using Dropbox IDs to avoid the 'new entry' bug when you rename a file
- Build posts incrementally while big syncs are taking place 
- Revert lowercase for all files when disconnecting the client
- add support for Dropbox Paper files using paperDocsDownload and tell [Emad](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHMZJvMswZZXKvLfBRBVqfzksw)
- Add integration test with a dropbox Webhook call. I want to not push some code which would prevent syncing customer folders.
- Does client.remove support the removal of folders? If not, make it so and add a test
- Add a step to authentication flow which says: 'there is already a folder called 'Your blog title' in your Dropbox, would you like to use that?' then overwrite the files inside. This prevents the proliferation of confusing 'Your blog title (1)' when you re-authenticate.
- Add a progress bar to the dashboard when writing existing files to Dropbox. It takes a while and confuses people.
- Adding an additional blog to existing app folder under constant webhooks failed. New blog had correct folder but old blog still used root. I guess we need to acquire a lock on ALL blogs interacting with that dropbox account.
- Extend sync lock during long syncs
- Write test to simulate process dying and restarting mid-pull. Does the client recover?
- Write tests for a series of random dropbox client operations (pull, add, push, move, reset, delete) that can be seeded and reliably re-run in the case of failure.
- Gracefuly retry wrapper around Dropbox
- Can we write to a folder_id instead of a path? It would be nice to be able to move the blog's folder even when writing the initial files to it, for example...
- This should be simple once we copy the exisiting state of the blog folder across. But right now it doesn't really do much. It resets the local server folder. Then resyncs.
- Update to latest version of Dropbox client.
- Make the folder in Dropbox rename automatically when the customer changes the username for one of their multiple blogs?
    ## 1. Harden sync lifecycle
    - [ ] Add a watchdog for long-running sync jobs that restarts or alerts when a job exceeds an expected duration.
    - [ ] Ensure incomplete setup/sync jobs resume automatically after process restarts by persisting in-progress state and re-queueing tasks on boot.
    - [ ] Capture and retry transient Dropbox API errors with exponential backoff while surfacing hard failures for manual intervention.

    ## 2. Improve large file handling
    - [ ] Switch uploads >150 MB to the Dropbox upload session API with chunked transfer and resumable checkpoints.
    - [ ] Stream downloads to disk instead of buffering entirely in memory to prevent crashes when fetching large assets.
    - [ ] Provide user-facing warnings when a file exceeds configured limits or fails checksum validation.

    ## 3. Strengthen rename and conflict detection
    - [ ] Maintain a cache of Dropbox file IDs to correctly map renames without duplicate entries.
    - [ ] Detect folder-level moves and apply them atomically to avoid partial state during sync.
    - [ ] Validate content hashes after sync to catch divergence between Dropbox and Blot storage.

    ## 4. Expand observability and support tooling
    - [ ] Emit structured logs for setup, sync, and error paths so incidents can be correlated across services.
    - [ ] Surface active sync issues and recovery steps within the dashboard homepage to prompt user action.
    - [ ] Add automated email/notification templates for rate limit, low storage, and revoked token scenarios.

Add media-query to prevent typeset hanging punctuation on small screens (it looks weird) and tell [Shibel](https://mail.google.com/mail/u/0/#inbox/FMfcgxwCgpXqMzwcBGWgjxgpcpCnMCQW)

---

Create an API for Blot
- Add webhooks and tell [Aurynn](https://mail.google.com/mail/u/0/#inbox/1554260da157b405) and [Shawn](https://twitter.com/soypunk)

When the customer's blog does not have a client, client.write and client.remove need to remove the files from the source folder. Create some kind of local client which we fall back and use when none is configured?

Client.write does not propogate sync errors... to demonstrate this, revoke dropbox token then try to enable local editing.

Reconsider default slug length or add new short slug property and tell [Josh](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBTjxhZStzKhchtwjXbWxDbdfh)

Self-hosting:
- Write self-hosting documentation
  - Tell [Jake](https://mail.google.com/mail/u/0/#inbox/1659d67326849fb3)
  - Tell [Berndl](https://mail.google.com/mail/u/0/#inbox/FMfcgzGlkPcpPHkbRnKFRWNPGcGTPcJD)
  - Tell [Joel](https://mail.google.com/mail/u/0/#inbox/FMfcgzGmtXNqjrzcDZGVTgbvwFJjcDvd)
  - Tell [Mohammed](https://twitter.com/mnafees_me/status/1051121206030753794?s=12)
  - Tell [BP](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGCQVldJqdJZjktfKxNfgCdkTh)
  - Tell [Rado](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDDjrKSQVTXqvgFRGrhMSFvrR)
  - Tell [Nuno](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDDmKWgcNKgMKBNDXxWqGvqrP)
  - Tell [Omaid](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDDjqhCxHhJqbGlGNZsfkWWQf)
  - Tell [Brian](https://mail.google.com/mail/u/0/#inbox/FMfcgzGrbRSCsGjRTXLGVxlwHjQKrchP)
  - Tell [Jarod](https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDWlwWMfqnWBqxBtznDJVqxfr)
  - Tell [Francesco](https://mail.google.com/mail/u/0/#inbox/FMfcgxwHNWChQlWnBZtSxhFrpVlgMwXx)
  - Tell [Pranay](https://mail.google.com/mail/u/0/#inbox/FMfcgzGxRndfvjrJWCkLtTNNQPtNFHpq)
  - Tell [Aryan](https://mail.google.com/mail/u/0/#inbox/FMfcgxwJWjCrnXRvhtPtFGVjgkfZqPMQ)
  - Tell [Todd](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLswHGkjtjmGLZtxXcpNSzKxvd)
  - Tell [Anita](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLswPCKHSrzLMthNDncznmTnnJ)
  - Tell [Kaushik](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLtsxhzZVLzpqpTCBmXcsFPPdJ?compose=CllgCJZZQKjZgksDMdQFkdwGNcPMGFpjKxNnbBKxBzVZvVCFMFsmGhbXxnhhxLvKPBzCHcPHKvB)
  - Tell [Michael](https://mail.google.com/mail/u/0/#inbox/FMfcgzGkXSWvKNHtTgmFlrgkWvkgbksx?compose=CllgCKHQdVwQDCnfClqxMhSRnkDKmXhLckxZBrgkfDjdCrsDZLsRhGmgtgjZdlqmCjmGpKqQJvq)
  - Tell [Frank](https://mail.google.com/mail/u/0/#inbox/FMfcgzGkZkZWrprNcThxMPQKzSTLbkDs)
  - Tell [Zip](https://mail.google.com/mail/u/0/#inbox/FMfcgzGmthffLmfRBswqGmsDKQWdJZFB)

- Tell Nick when it's possible to deploy a self-hosted [Blot on Vercel](https://mail.google.com/mail/u/0/#inbox/FMfcgxwKjxHWSvgjKtCWrbhccKFPlkdD) and [Zia](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLsSXWPRNNxDNcdhGHQXBkTtsx)

Add option to sort posts by filename alphabetically and tell [Steve](https://mail.google.com/mail/u/0/#inbox/FMfcgxwJXpTLwnKwSRTFKRqXKNgQkFDv)

Make it possible to reset password when logged in (perhaps after forgetting it) in the change password flow

Hidden posts:
- Ensure _ entries are true public files, tell john & other folks who depend on the menu: yes, page: no side effect
- Warn customers that underscore will not work for hidden pages
- Tell [Rodrigo](https://mail.google.com/mail/u/0/#inbox/1564a13991197f63) don't write previews for _ posts

Embed feature
- Add support for native PDF embeds in posts, just put a link to a PDF or a path, e.g. /_assets/file.pdf --> would become a nice embed.
- Add support for native MP3 embeds in posts, just put a link to an MP3 or a path, e.g. /_assets/file.mp3 --> would become a nice embed then tell [Luke](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVWLlqqwbksXcScNdhcTjhjfq) and [Nash](http://twitter.com/nashp) and [Andy](https://mail.google.com/mail/u/0/#inbox/LXphbRLrghxkrJmtbtfXwZHrBHqGzzjDqLZVmfRCzrg) and [Charlie](mailto:hi@charlliegleason.com) and [Konstantin](https://mail.google.com/mail/u/0/#inbox/FMfcgxwDrRQPphRrjCrWXPLzgHhxkzMN)
- Add soundcloud embeds then tell [Jonas](https://mail.google.com/mail/u/0/#inbox/16404cc8d437cc23), Nashp, and [Anders](https://twitter.com/4nd3rs/status/1028250661589278720?s=12) and [Richard](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChJbvQlJvtLVPDqRCHrGJkZTr)
- Add are.na embeds and tell [Marco](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLswLkPbqqvMVWPSHvRqtqcKlZ)

---

Improvements to thumbnail generator
- Prioritize faces in crop?
- Try to crop out ruined borders. E.g. when making a square crop of a rectangular image with a border, crop into the image as well to remove the border-on-three-sides effect
- Extract color palette too for the image
- Offer imgix style API for embedding thumbnails

Improvements to reverse proxy:
- Add support for IPv6 and tell [Raul](https://mail.google.com/mail/u/0/#inbox/167083384282a5df)

Plugins
- Adjust image caption plugin to be semantic using <figure>
- Ensure Youtube plugin still functions if apis fails

---

Consider supporting Micro pub and tell [Jamie](https://mail.google.com/mail/u/0/#inbox/FMfcgxwBVzptjbWjjqlhBQtgJsRstVSD)

Consider offering newsletter service and tell [David](https://mail.google.com/mail/u/0/#inbox/FMfcgxwKkbrQKXjDGTFNmtHVwJXThsWR) and [Nash](https://mail.google.com/mail/u/0/#inbox/FMfcgxwLtGhBWHnmtJMPGRhNDkLTMbCV) and [Kyle](https://mail.google.com/mail/u/0/#inbox/FMfcgzGkXSSTDVMfMGZQxcmcmlBSBQrR)

Consider adding support for [PubSubHubbub](https://en.wikipedia.org/wiki/WebSub) support and tell [Thomas](https://mail.google.com/mail/u/0/#inbox/FMfcgxwChJdDWZmclLFChDsbWBQlWsfk)

Consider atompub support for Marsedit and tell Chet and [David](https://mail.google.com/mail/u/0/#inbox/FMfcgxwKjBGqSqTdQqtRCwdKplFvgBCP)